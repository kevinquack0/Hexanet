{"version":3,"sources":["App/Models/pagination.ts","App/Models/activity.ts","App/api/Agent.ts","App/Models/profile.ts","App/stores/ActivityStore.ts","App/stores/ProfileStore.ts","App/stores/userStore.ts","App/stores/store.ts","App/stores/commonStore.ts","App/stores/modalStore.ts","App/stores/commentStore.ts","App/Layout/NavBar.tsx","Features/activities/dashboard/ActivityFilters.tsx","Features/profiles/FollowButton.tsx","Features/profiles/ProfileCard.tsx","Features/activities/dashboard/ActivityListItemAttendee.tsx","Features/activities/dashboard/ActivityListItem.tsx","Features/activities/dashboard/ActivityList.tsx","Features/activities/dashboard/ActivityListItemPlaceholder.tsx","Features/activities/dashboard/ActivityDashboard.tsx","App/Layout/LoadingComponents.tsx","App/common/form/MyTextInput.tsx","Features/users/LoginForm.tsx","Features/errors/ValidationErrors.tsx","Features/users/RegisterForm.tsx","Features/home/HomePage.tsx","Features/activities/form/MyTextArea.tsx","Features/activities/form/MySelectInput.tsx","App/common/form/options/categoryOptions.ts","Features/activities/form/MyDateInput.tsx","Features/activities/form/ActivityForm.tsx","Features/activities/details/ActivityDetailedChat.tsx","Features/activities/details/ActivityDetailedInfo.tsx","Features/activities/details/ActivityDetailedSideBar.tsx","Features/activities/details/ActivityDetailsHeader.tsx","Features/activities/details/ActivityDetails.tsx","Features/errors/TestError.tsx","Features/errors/NotFound.tsx","Features/errors/ServerError.tsx","App/common/modals/ModalContainer.tsx","Features/profiles/ProfileEdit.Form.tsx","Features/profiles/ProfileAbout.tsx","Features/profiles/ProfileActivities.tsx","Features/profiles/ProfileFollowings.tsx","App/common/imageUpload/PhotoWidgetCropper.tsx","App/common/imageUpload/PhotoWidgetDropzone.tsx","App/common/imageUpload/PhotoUploadWidget.tsx","Features/profiles/ProfilePhotos.tsx","Features/profiles/ProfileContent.tsx","Features/profiles/ProfileHeader.tsx","Features/profiles/ProfilePage.tsx","App/Layout/PrivateRoute.tsx","App/Layout/App.tsx","reportWebVitals.ts","App/Layout/ScrollToTop.tsx","index.tsx"],"names":["PaginatedResult","data","pagination","this","PagingParams","pageNumber","pageSize","Activity","init","Object","assign","ActivityFormValues","activity","id","undefined","title","category","description","date","city","venue","axios","defaults","baseURL","process","interceptors","request","use","config","token","store","commonStore","headers","Authorization","response","a","JSON","parse","error","status","method","errors","hasOwnProperty","history","push","modalStateErrors","key","flat","toast","setServerError","Promise","reject","responseBody","requests","url","get","then","body","post","put","delete","agent","Activities","list","params","details","create","update","attend","Account","current","login","user","register","Profiles","username","uploadPhoto","file","formData","FormData","append","setMainPhoto","deletePhoto","updateProfile","profile","updateFollowing","listFollowings","predicate","listActivities","Profile","displayName","image","ActivityStore","activityRegistry","Map","selectedActivity","editMode","loading","loadingInitial","pagingParams","set","setPagingParams","setPredicate","value","resetPredicate","forEach","loadActivities","axiosParams","result","setActivity","setPagination","setLoadingInitial","console","log","loadActivity","getActivity","runInAction","userStore","isGoing","attendees","some","isHost","hostUsername","host","find","x","Date","state","createActivity","attendee","newActivity","updateActivity","updatedActivity","deleteActivity","updateAttendance","filter","cancelActivityToggle","isCancelled","updateAttendeeFollowing","following","followersCount","clearSelectedActivity","makeAutoObservable","reaction","keys","clear","URLSearchParams","toString","toISOString","Array","from","values","sort","b","getTime","entries","activitiesByDate","reduce","activities","format","ProfileStore","currentUserProfile","loadingProfile","uploading","followings","loadingFollowings","activeTab","userActivities","loadingActivities","setActiveTab","loadProfile","photo","photos","isMain","setImage","p","setDisplayName","activityStore","followingCount","loadFollowings","loadUserActivities","UserStore","creds","setToken","modalStore","closeModal","logout","window","localStorage","removeItem","getUser","name","getItem","appLoaded","setAppLoaded","setItem","modal","open","openModal","content","profileStore","commentStore","comments","hubConnection","createHubConnection","activityId","HubConnectionBuilder","withUrl","accessTokenFactory","withAutomaticReconnect","configureLogging","LogLevel","Information","build","start","catch","on","comment","createdAt","unshift","stopHubConnection","stop","clearComments","addComment","invoke","StoreContext","createContext","useStore","useContext","observer","Menu","inverted","fixed","Container","Item","as","NavLink","to","exact","header","Icon","size","Button","positive","position","style","marginRight","Image","src","avatar","spaced","Dropdown","pointing","text","Link","icon","onClick","vertical","width","marginTop","Header","attached","color","active","has","onChange","Reveal","animated","Content","visible","fluid","hidden","e","preventDefault","handleFollow","Card","Description","str","length","substring","shorten","bio","extra","styles","borderColor","borderWidth","List","horizontal","map","Popup","hoverable","trigger","circular","bordered","ActivityListItem","useState","Segment","Group","Label","textAlign","marginBottom","basic","secondary","clearing","floated","groupedActivities","group","sub","ActivityListItemPlaceholder","Placeholder","minHeight","Line","Paragraph","disabled","loadingNext","setLoadingNext","useEffect","Grid","Column","pageStart","loadMore","currentPage","hasMore","totalPages","initialLoad","Loader","LoadingComponents","Dimmer","MyTextInput","props","useField","field","meta","Form","Field","touched","label","initialValues","email","password","onSubmit","setErrors","handleSubmit","isSubmitting","className","autoComplete","placeholder","type","render","ValidationErrors","Message","err","i","validationSchema","Yup","required","isValid","dirty","isLoggedIn","MyTextArea","MySelectInput","helpers","Select","clearable","options","d","setValue","onBlur","setTouched","categoryOption","MyDateInput","selected","useHistory","useParams","nullable","enableReinitialize","uuid","handleFormSubmit","rows","placeholderText","showTimeSelect","timeCaption","dateFormat","border","resetForm","onKeyPress","shiftKey","Comment","Avatar","Author","Metadata","formatDistanceToNow","Text","whiteSpace","verticalAlign","relaxed","divided","ribbon","Extra","activityImageStyle","activityImageTextStyle","bottom","left","height","padding","zIndex","top","ActivityDetailsHeader","ActivityDetailedSideBar","TestErrors","widths","baseUrl","primary","NotFound","Inline","message","Modal","onClose","setEditMode","isCurrentUser","Tab","Pane","panes","menuItem","pane","menu","onTabChange","activeIndex","handleTabChange","itemsPerRow","objectFit","Meta","PhotoWidgetCropper","imagePreview","setCropper","initialAspectRatio","aspectRatio","preview","guides","viewMode","autoCropArea","background","onInitialized","cropper","PhotoWidgetDropzone","setFiles","dzStyles","boderRadius","paddingTop","onDrop","useCallback","acceptedFiles","URL","createObjectURL","useDropzone","getRootProps","getInputProps","isDragActive","PhotoUploadWidget","files","revokeObjectURL","overflow","getCroppedCanvas","toBlob","blob","addPhotoMode","setAddPhotoMode","target","setTarget","ButtonGroup","currentTarget","handleSetMainPhoto","handleDeletePhoto","menuPosition","Statistic","Divider","PrivateRoute","Component","component","rest","location","useLocation","finally","hideProgressBar","path","HomePage","ActivityDashboard","ActivityDetails","ActivityForm","ProfilePage","ServerError","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ScrollToTop","pathname","scrollTo","createBrowserHistory","ReactDOM","StrictMode","Provider","document","getElementById"],"mappings":"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","file":"static/js/main.8bb61965.chunk.js","sourcesContent":["export interface Pagination {\r\n  currentPage: number;\r\n  itemsPerPage: number;\r\n  totalItems: number;\r\n  totalPages: number;\r\n}\r\n\r\nexport class PaginatedResult<T> {\r\n  data: T;\r\n  pagination: Pagination;\r\n\r\n  constructor(data: T, pagination: Pagination) {\r\n    this.data = data;\r\n    this.pagination = pagination;\r\n  }\r\n}\r\n\r\nexport class PagingParams {\r\n  pageNumber;\r\n  pageSize;\r\n\r\n  constructor(pageNumber = 1, pageSize = 2) {\r\n    this.pageNumber = pageNumber;\r\n    this.pageSize = pageSize;\r\n  }\r\n}\r\n","import { boolean, string } from \"yup/lib/locale\";\r\nimport { Profile } from \"./profile\";\r\n\r\nexport interface Activity {\r\n  id: string;\r\n  title: string;\r\n  date: Date | null;\r\n  description: string;\r\n  category: string;\r\n  city: string;\r\n  venue: string;\r\n  hostUsername: string;\r\n  isCancelled: boolean;\r\n  isGoing: boolean;\r\n  isHost: boolean;\r\n  host?: Profile;\r\n  attendees: Profile[];\r\n}\r\nexport class Activity implements Activity {\r\n  constructor(init?: ActivityFormValues) {\r\n    Object.assign(this, init);\r\n  }\r\n}\r\nexport class ActivityFormValues {\r\n  id?: string = undefined;\r\n  title: string = \"\";\r\n  category: string = \"\";\r\n  description: string = \"\";\r\n  date: Date | null = null;\r\n  city: string = \"\";\r\n  venue: string = \"\";\r\n\r\n  constructor(activity?: ActivityFormValues) {\r\n    if (activity) {\r\n      this.id = activity.id;\r\n      this.title = activity.title;\r\n      this.category = activity.category;\r\n      this.description = activity.description;\r\n      this.date = activity.date;\r\n      this.venue = activity.venue;\r\n      this.city = activity.city;\r\n    }\r\n  }\r\n}\r\n","import { PaginatedResult } from \"./../Models/pagination\";\r\nimport { Photo, Profile } from \"./../Models/profile\";\r\nimport { UserFormValues } from \"./../Models/User\";\r\nimport { Activity, ActivityFormValues } from \"./../Models/activity\";\r\n\r\nimport axios, { AxiosError, AxiosResponse } from \"axios\";\r\nimport { toast } from \"react-toastify\";\r\nimport { history } from \"../..\";\r\nimport { store } from \"../stores/store\";\r\nimport { User } from \"../Models/User\";\r\nimport { UserActivity } from \"../Models/UserActivity\";\r\nconst sleep = (delay: number) => {\r\n  return new Promise((resolve) => {\r\n    setTimeout(resolve, delay);\r\n  });\r\n};\r\naxios.defaults.baseURL = process.env.REACT_APP_API_URL;\r\n\r\naxios.interceptors.request.use((config) => {\r\n  const token = store.commonStore.token;\r\n  if (token) {\r\n    config.headers.Authorization = `Bearer ${token}`;\r\n  }\r\n\r\n  return config;\r\n});\r\n//Interacts with backend\r\naxios.interceptors.response.use(\r\n  async (response) => {\r\n    if (process.env.NODE_ENV === \"development\") {\r\n      await sleep(1000);\r\n    }\r\n    const pagination = response.headers[\"pagination\"];\r\n    if (pagination) {\r\n      response.data = new PaginatedResult(\r\n        response.data,\r\n        JSON.parse(pagination)\r\n      );\r\n      return response as AxiosResponse<PaginatedResult<any>>;\r\n    }\r\n    return response;\r\n  },\r\n  (error: AxiosError) => {\r\n    const { data, status, config } = error.response!;\r\n    switch (status) {\r\n      case 400:\r\n        if (config.method === \"get\" && data.errors.hasOwnProperty(\"id\")) {\r\n          history.push(\"/not-found\");\r\n        }\r\n        if (data.errors) {\r\n          const modalStateErrors = [];\r\n          for (const key in data.errors) {\r\n            if (data.errors[key]) {\r\n              modalStateErrors.push(data.errors[key]);\r\n            }\r\n          }\r\n          throw modalStateErrors.flat();\r\n        } else {\r\n          toast.error(data);\r\n        }\r\n        break;\r\n      case 401:\r\n        toast.error(\"unauthorised\");\r\n        break;\r\n      case 404:\r\n        history.push(\"/not-found\");\r\n        break;\r\n      case 500:\r\n        store.commonStore.setServerError(data);\r\n        history.push(\"/server-error\");\r\n        break;\r\n    }\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\nconst responseBody = <T>(response: AxiosResponse<T>) => response.data;\r\n\r\nconst requests = {\r\n  //CRUD interacting with back-end\r\n  get: <T>(url: string) => axios.get<T>(url).then(responseBody),\r\n  post: <T>(url: string, body: {}) =>\r\n    axios.post<T>(url, body).then(responseBody),\r\n  put: <T>(url: string, body: {}) => axios.put<T>(url, body).then(responseBody),\r\n  del: <T>(url: string) => axios.delete<T>(url).then(responseBody),\r\n};\r\n\r\nconst Activities = {\r\n  //things you can do to activities to get/post information to the back-end\r\n  list: (params: URLSearchParams) =>\r\n    axios\r\n      .get<PaginatedResult<Activity[]>>(\"/activities\", { params })\r\n      .then(responseBody),\r\n  details: (id: string) => requests.get<Activity>(`/activities/${id}`),\r\n  create: (activity: ActivityFormValues) =>\r\n    requests.post<void>(\"/activities\", activity),\r\n  update: (activity: ActivityFormValues) =>\r\n    requests.put<void>(`/activities/${activity.id}`, activity),\r\n  delete: (id: string) => requests.del<void>(`/activities/${id}`),\r\n  attend: (id: string) => requests.post<void>(`/activities/${id}/attend`, {}),\r\n};\r\n\r\nconst Account = {\r\n  current: () => requests.get<User>(\"/account\"),\r\n  login: (user: UserFormValues) => requests.post<User>(\"/account/login\", user),\r\n  register: (user: UserFormValues) =>\r\n    requests.post<User>(\"/account/register\", user),\r\n};\r\n\r\nconst Profiles = {\r\n  get: (username: string) => requests.get<Profile>(`/profiles/${username}`),\r\n  uploadPhoto: (file: Blob) => {\r\n    let formData = new FormData();\r\n    formData.append(\"File\", file);\r\n    return axios.post<Photo>(\"photos\", formData, {\r\n      headers: { \"Content-type\": \"multipart/form-data\" },\r\n    });\r\n  },\r\n\r\n  setMainPhoto: (id: string) => requests.post(`/photos/${id}/setMain`, {}),\r\n  deletePhoto: (id: string) => requests.del(`/photos/${id}`),\r\n  updateProfile: (profile: Partial<Profile>) =>\r\n    requests.put(`/profiles`, profile),\r\n  updateFollowing: (username: string) =>\r\n    requests.post(`/follow/${username}`, {}),\r\n  listFollowings: (username: string, predicate: string) =>\r\n    requests.get<Profile[]>(`/follow/${username}?predicate=${predicate}`),\r\n  listActivities: (username: string, predicate: string) =>\r\n    requests.get<UserActivity[]>(`/profiles/${username}/activities?\r\npredicate=${predicate}`),\r\n};\r\n\r\nconst agent = {\r\n  Activities,\r\n  Account,\r\n  Profiles,\r\n};\r\nexport default agent;\r\n","import { User } from \"./User\";\r\n\r\nexport interface Profile {\r\n  username: string;\r\n  displayName: string;\r\n  image?: string;\r\n  bio?: string;\r\n  followersCount: number;\r\n  followingCount: number;\r\n  following: boolean;\r\n  photos?: Photo[];\r\n}\r\n\r\nexport class Profile implements Profile {\r\n  constructor(user: User) {\r\n    this.username = user.username;\r\n    this.displayName = user.displayName;\r\n    this.image = user.image;\r\n  }\r\n}\r\n\r\nexport interface Photo {\r\n  id: string;\r\n  url: string;\r\n  isMain: boolean;\r\n}\r\n","import { Pagination, PagingParams } from \"./../Models/pagination\";\r\nimport { Activity, ActivityFormValues } from \"./../Models/activity\";\r\nimport {\r\n  action,\r\n  makeAutoObservable,\r\n  makeObservable,\r\n  observable,\r\n  reaction,\r\n  runInAction,\r\n} from \"mobx\";\r\nimport agent from \"../api/Agent\";\r\nimport { v4 as uuid } from \"uuid\";\r\nimport { format } from \"date-fns\";\r\nimport { store } from \"./store\";\r\nimport { Profile } from \"../Models/profile\";\r\nexport default class ActivityStore {\r\n  activityRegistry = new Map<string, Activity>();\r\n  selectedActivity: Activity | undefined = undefined;\r\n  editMode = false;\r\n  loading = false;\r\n  loadingInitial = false;\r\n  pagination: Pagination | null = null;\r\n  pagingParams = new PagingParams();\r\n  predicate = new Map().set(\"all\", true);\r\n\r\n  constructor() {\r\n    makeAutoObservable(this);\r\n\r\n    reaction(\r\n      () => this.predicate.keys(),\r\n      () => {\r\n        this.pagingParams = new PagingParams();\r\n        this.activityRegistry.clear();\r\n        this.loadActivities();\r\n      }\r\n    );\r\n  }\r\n\r\n  setPagingParams = (pagingParams: PagingParams) => {\r\n    this.pagingParams = pagingParams;\r\n  };\r\n\r\n  setPredicate = (predicate: string, value: string | Date) => {\r\n    const resetPredicate = () => {\r\n      this.predicate.forEach((value, key) => {\r\n        if (key !== \"startDate\") this.predicate.delete(key);\r\n      });\r\n    };\r\n    switch (predicate) {\r\n      case \"all\":\r\n        resetPredicate();\r\n        this.predicate.set(\"all\", true);\r\n        break;\r\n      case \"isGoing\":\r\n        resetPredicate();\r\n        this.predicate.set(\"isGoing\", true);\r\n        break;\r\n      case \"isHost\":\r\n        resetPredicate();\r\n        this.predicate.set(\"isHost\", true);\r\n        break;\r\n      case \"startDate\":\r\n        this.predicate.delete(\"startDate\");\r\n        this.predicate.set(\"startDate\", value);\r\n    }\r\n  };\r\n\r\n  get axiosParams() {\r\n    const params = new URLSearchParams();\r\n    params.append(\"pageNumber\", this.pagingParams.pageNumber.toString());\r\n    params.append(\"pageSize\", this.pagingParams.pageSize.toString());\r\n    this.predicate.forEach((value, key) => {\r\n      if (key === \"startDate\") {\r\n        params.append(key, (value as Date).toISOString());\r\n      } else {\r\n        params.append(key, value);\r\n      }\r\n    });\r\n    return params;\r\n  }\r\n\r\n  get activitiesByDate() {\r\n    return Array.from(this.activityRegistry.values()).sort(\r\n      (a, b) => a.date!.getTime() - b.date!.getTime()\r\n    );\r\n  }\r\n\r\n  get groupedActivities() {\r\n    return Object.entries(\r\n      this.activitiesByDate.reduce((activities, activity) => {\r\n        const date = format(activity.date!, \"dd MMM yyyy\");\r\n        activities[date] = activities[date]\r\n          ? [...activities[date], activity]\r\n          : [activity];\r\n        return activities;\r\n      }, {} as { [key: string]: Activity[] })\r\n    );\r\n  }\r\n\r\n  loadActivities = async () => {\r\n    this.loadingInitial = true;\r\n    try {\r\n      const result = await agent.Activities.list(this.axiosParams);\r\n      result.data.forEach((activity) => {\r\n        this.setActivity(activity);\r\n      });\r\n      this.setPagination(result.pagination);\r\n      this.setLoadingInitial(false);\r\n    } catch (error) {\r\n      console.log(error);\r\n      this.setLoadingInitial(false);\r\n    }\r\n  };\r\n\r\n  setPagination = (pagination: Pagination) => {\r\n    this.pagination = pagination;\r\n  };\r\n\r\n  loadActivity = async (id: string) => {\r\n    let activity = this.getActivity(id);\r\n    if (activity) {\r\n      this.selectedActivity = activity;\r\n      return activity;\r\n    } else {\r\n      this.loadingInitial = true;\r\n      try {\r\n        activity = await agent.Activities.details(id);\r\n        this.setActivity(activity);\r\n        runInAction(() => {\r\n          this.selectedActivity = activity;\r\n        });\r\n        this.setLoadingInitial(false);\r\n        return activity;\r\n      } catch (error) {\r\n        console.log(error);\r\n        this.setLoadingInitial(false);\r\n      }\r\n    }\r\n  };\r\n\r\n  private setActivity = (activity: Activity) => {\r\n    const user = store.userStore.user;\r\n    if (user) {\r\n      activity.isGoing = activity.attendees!.some(\r\n        (a) => a.username === user.username\r\n      );\r\n      activity.isHost = activity.hostUsername === user.username;\r\n      activity.host = activity.attendees?.find(\r\n        (x) => x.username === activity.hostUsername\r\n      );\r\n    }\r\n    activity.date = new Date(activity.date!);\r\n    this.activityRegistry.set(activity.id, activity);\r\n  };\r\n\r\n  private getActivity = (id: string) => {\r\n    return this.activityRegistry.get(id);\r\n  };\r\n\r\n  setLoadingInitial = (state: boolean) => {\r\n    this.loadingInitial = state;\r\n  };\r\n\r\n  createActivity = async (activity: ActivityFormValues) => {\r\n    const user = store.userStore.user;\r\n    const attendee = new Profile(user!);\r\n    try {\r\n      await agent.Activities.create(activity);\r\n      const newActivity = new Activity(activity);\r\n      newActivity.hostUsername = user!.username;\r\n      newActivity.attendees = [attendee];\r\n      this.setActivity(newActivity);\r\n      runInAction(() => {\r\n        this.selectedActivity = newActivity;\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  updateActivity = async (activity: ActivityFormValues) => {\r\n    try {\r\n      await agent.Activities.update(activity);\r\n      runInAction(() => {\r\n        if (activity.id) {\r\n          let updatedActivity = {\r\n            ...this.getActivity(activity.id),\r\n            ...activity,\r\n          };\r\n          this.activityRegistry.set(activity.id, updatedActivity as Activity);\r\n          this.selectedActivity = updatedActivity as Activity;\r\n        }\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  deleteActivity = async (id: string) => {\r\n    this.loading = true;\r\n    try {\r\n      await agent.Activities.delete(id);\r\n      runInAction(() => {\r\n        this.activityRegistry.delete(id);\r\n        this.loading = false;\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n      runInAction(() => {\r\n        this.loading = false;\r\n      });\r\n    }\r\n  };\r\n\r\n  updateAttendance = async () => {\r\n    const user = store.userStore.user;\r\n    this.loading = true;\r\n    try {\r\n      await agent.Activities.attend(this.selectedActivity!.id);\r\n      runInAction(() => {\r\n        if (this.selectedActivity?.isGoing) {\r\n          this.selectedActivity.attendees =\r\n            this.selectedActivity.attendees?.filter(\r\n              (a) => a.username !== user?.username\r\n            );\r\n          this.selectedActivity.isGoing = false;\r\n        } else {\r\n          const attendee = new Profile(user!);\r\n          this.selectedActivity?.attendees?.push(attendee);\r\n          this.selectedActivity!.isGoing = true;\r\n        }\r\n        this.activityRegistry.set(\r\n          this.selectedActivity!.id,\r\n          this.selectedActivity!\r\n        );\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n    } finally {\r\n      runInAction(() => (this.loading = false));\r\n    }\r\n  };\r\n\r\n  cancelActivityToggle = async () => {\r\n    this.loading = true;\r\n    try {\r\n      await agent.Activities.attend(this.selectedActivity!.id);\r\n      runInAction(() => {\r\n        this.selectedActivity!.isCancelled =\r\n          !this.selectedActivity?.isCancelled;\r\n        this.activityRegistry.set(\r\n          this.selectedActivity!.id,\r\n          this.selectedActivity!\r\n        );\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n    } finally {\r\n      runInAction(() => (this.loading = false));\r\n    }\r\n  };\r\n\r\n  updateAttendeeFollowing = (username: string) => {\r\n    this.activityRegistry.forEach((activity) => {\r\n      activity.attendees.forEach((attendee) => {\r\n        if (attendee.username === username) {\r\n          attendee.following\r\n            ? attendee.followersCount--\r\n            : attendee.followersCount++;\r\n          attendee.following = !attendee.following;\r\n        }\r\n      });\r\n    });\r\n  };\r\n\r\n  clearSelectedActivity = () => {\r\n    this.selectedActivity = undefined;\r\n  };\r\n}\r\n","import { reaction, runInAction } from \"mobx\";\r\nimport { makeAutoObservable } from \"mobx\";\r\nimport agent from \"../api/Agent\";\r\nimport { Photo, Profile } from \"../Models/profile\";\r\nimport { UserActivity } from \"../Models/UserActivity\";\r\nimport { store } from \"./store\";\r\n\r\nexport default class ProfileStore {\r\n  currentUserProfile: Profile | null = null;\r\n  profile: Profile | null = null;\r\n  loadingProfile = false;\r\n  uploading = false;\r\n  loading = false;\r\n  followings: Profile[] = [];\r\n  loadingFollowings = false;\r\n  activeTab: number = 0;\r\n  userActivities: UserActivity[] = [];\r\n  loadingActivities = false;\r\n\r\n  constructor() {\r\n    makeAutoObservable(this);\r\n\r\n    reaction(\r\n      () => this.activeTab,\r\n      (activeTab) => {\r\n        if (activeTab == 3 || activeTab === 4) {\r\n          const predicate = activeTab === 3 ? \"followers\" : \"following\";\r\n          this.loadFollowings(predicate);\r\n        } else {\r\n          this.followings = [];\r\n        }\r\n      }\r\n    );\r\n  }\r\n\r\n  setActiveTab = (activeTab: any) => {\r\n    this.activeTab = activeTab;\r\n  };\r\n  get isCurrentUser() {\r\n    if (store.userStore.user && this.profile) {\r\n      return store.userStore.user.username === this.profile.username;\r\n    }\r\n\r\n    return false;\r\n  }\r\n\r\n  loadProfile = async (username: string) => {\r\n    this.loadingProfile = true;\r\n\r\n    try {\r\n      const profile = await agent.Profiles.get(username);\r\n      runInAction(() => {\r\n        this.profile = profile;\r\n        this.loadingProfile = false;\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n      runInAction(() => (this.loadingProfile = false));\r\n    }\r\n  };\r\n\r\n  uploadPhoto = async (file: Blob) => {\r\n    this.uploading = true;\r\n    console.log(\"Upload method: \" + this.uploading);\r\n    try {\r\n      const response = await agent.Profiles.uploadPhoto(file);\r\n      const photo = response.data;\r\n      runInAction(() => {\r\n        if (this.profile) {\r\n          this.profile.photos?.push(photo);\r\n          if (photo.isMain && store.userStore.user) {\r\n            store.userStore.setImage(photo.url);\r\n            this.profile.image = photo.url;\r\n          }\r\n        }\r\n        this.uploading = false;\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n      runInAction(() => (this.uploading = false));\r\n    }\r\n  };\r\n\r\n  setMainPhoto = async (photo: Photo) => {\r\n    this.loading = true;\r\n\r\n    try {\r\n      await agent.Profiles.setMainPhoto(photo.id);\r\n      store.userStore.setImage(photo.url);\r\n      runInAction(() => {\r\n        if (this.profile && this.profile.photos) {\r\n          this.profile.photos.find((p) => p.isMain)!.isMain = false;\r\n          this.profile.photos.find((p) => p.id === photo.id)!.isMain = true;\r\n          this.profile.image = photo.url;\r\n          this.loading = false;\r\n        }\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n      runInAction(() => (this.loading = false));\r\n    }\r\n  };\r\n\r\n  deletePhoto = async (photo: Photo) => {\r\n    this.loading = true;\r\n\r\n    try {\r\n      await agent.Profiles.deletePhoto(photo.id);\r\n      runInAction(() => {\r\n        if (this.profile) {\r\n          this.profile.photos = this.profile.photos?.filter(\r\n            (p) => p.id !== photo.id\r\n          );\r\n          this.loading = false;\r\n        }\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n      runInAction(() => (this.loading = false));\r\n    }\r\n  };\r\n\r\n  updateProfile = async (profile: Partial<Profile>) => {\r\n    this.loading = true;\r\n    try {\r\n      await agent.Profiles.updateProfile(profile);\r\n      runInAction(() => {\r\n        if (\r\n          profile.displayName &&\r\n          profile.displayName !== store.userStore.user?.displayName\r\n        ) {\r\n          store.userStore.setDisplayName(profile.displayName);\r\n        }\r\n        this.profile = { ...this.profile, ...(profile as Profile) };\r\n        this.loading = false;\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n      runInAction(() => (this.loading = false));\r\n    }\r\n  };\r\n\r\n  updateFollowing = async (username: string, following: boolean) => {\r\n    this.loading = true;\r\n    try {\r\n      await agent.Profiles.updateFollowing(username);\r\n      store.activityStore.updateAttendeeFollowing(username);\r\n      runInAction(() => {\r\n        if (\r\n          this.profile &&\r\n          this.profile.username !== store.userStore.user?.username &&\r\n          this.profile.username === username\r\n        ) {\r\n          following\r\n            ? this.profile.followersCount++\r\n            : this.profile.followersCount--;\r\n\r\n          this.profile.following = !this.profile.following;\r\n        }\r\n        if (\r\n          this.profile &&\r\n          this.profile.username === store.userStore.user?.username\r\n        ) {\r\n          following\r\n            ? this.profile.followingCount++\r\n            : this.profile.followingCount--;\r\n        }\r\n        this.followings.forEach((profile) => {\r\n          if (profile.username === username) {\r\n            profile.following\r\n              ? profile.followersCount--\r\n              : profile.followersCount++;\r\n            profile.following = !profile.following;\r\n          }\r\n        });\r\n\r\n        this.loading = false;\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n      runInAction(() => (this.loading = false));\r\n    }\r\n  };\r\n\r\n  loadFollowings = async (predicate: string) => {\r\n    this.loadingFollowings = true;\r\n\r\n    try {\r\n      const followings = await agent.Profiles.listFollowings(\r\n        this.profile!.username,\r\n        predicate\r\n      );\r\n      runInAction(() => {\r\n        this.followings = followings;\r\n        this.loadingFollowings = false;\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n      runInAction(() => (this.loadingFollowings = false));\r\n    }\r\n  };\r\n\r\n  loadUserActivities = async (username: string, predicate?: string) => {\r\n    this.loadingActivities = true;\r\n    try {\r\n      const activities = await agent.Profiles.listActivities(\r\n        username,\r\n        predicate!\r\n      );\r\n      runInAction(() => {\r\n        this.userActivities = activities;\r\n        this.loadingActivities = false;\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n      runInAction(() => {\r\n        this.loadingActivities = false;\r\n      });\r\n    }\r\n  };\r\n}\r\n","import { User, UserFormValues } from \"./../Models/User\";\r\nimport { makeAutoObservable, runInAction } from \"mobx\";\r\nimport agent from \"../api/Agent\";\r\nimport { store } from \"./store\";\r\nimport { history } from \"../..\";\r\nexport default class UserStore {\r\n  user: User | null = null;\r\n\r\n  constructor() {\r\n    makeAutoObservable(this);\r\n  }\r\n\r\n  get isLoggedIn() {\r\n    return !!this.user;\r\n  }\r\n\r\n  login = async (creds: UserFormValues) => {\r\n    try {\r\n      const user = await agent.Account.login(creds);\r\n      store.commonStore.setToken(user.token);\r\n      runInAction(() => (this.user = user));\r\n      history.push(\"/activities\");\r\n      store.modalStore.closeModal();\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  logout = () => {\r\n    store.commonStore.setToken(null);\r\n    window.localStorage.removeItem(\"jwt\");\r\n    this.user = null;\r\n    history.push(\"/\");\r\n  };\r\n\r\n  getUser = async () => {\r\n    try {\r\n      const user = await agent.Account.current();\r\n      runInAction(() => (this.user = user));\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  register = async (creds: UserFormValues) => {\r\n    try {\r\n      const user = await agent.Account.register(creds);\r\n      store.commonStore.setToken(user.token);\r\n      runInAction(() => (this.user = user));\r\n      history.push(\"/activities\");\r\n      store.modalStore.closeModal();\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  setImage = (image: string) => {\r\n    if (this.user) {\r\n      this.user.image = image;\r\n    }\r\n  };\r\n\r\n  setDisplayName = (name: string) => {\r\n    if (this.user) this.user.displayName = name;\r\n  };\r\n}\r\n","import { createContext, useContext } from \"react\";\r\nimport ActivityStore from \"./ActivityStore\";\r\nimport CommentStore from \"./commentStore\";\r\nimport CommonStore from \"./commonStore\";\r\nimport ModalStore from \"./modalStore\";\r\nimport ProfileStore from \"./ProfileStore\";\r\nimport UserStore from \"./userStore\";\r\n\r\ninterface Store {\r\n  activityStore: ActivityStore;\r\n  commonStore: CommonStore;\r\n  userStore: UserStore;\r\n  modalStore: ModalStore;\r\n  profileStore: ProfileStore;\r\n  commentStore: CommentStore;\r\n}\r\n\r\nexport const store: Store = {\r\n  activityStore: new ActivityStore(),\r\n  commonStore: new CommonStore(),\r\n  userStore: new UserStore(),\r\n  modalStore: new ModalStore(),\r\n  profileStore: new ProfileStore(),\r\n  commentStore: new CommentStore(),\r\n};\r\n\r\nexport const StoreContext = createContext(store);\r\n\r\nexport function useStore() {\r\n  return useContext(StoreContext);\r\n}\r\n","import { makeAutoObservable, reaction } from \"mobx\";\r\nimport { ServerError } from \"../Models/ServerError\";\r\n\r\nexport default class CommonStore {\r\n  error: ServerError | null = null;\r\n  token: string | null = window.localStorage.getItem(\"jwt\");\r\n  appLoaded = false;\r\n  constructor() {\r\n    makeAutoObservable(this);\r\n\r\n    reaction(\r\n      () => this.token,\r\n      (token) => {\r\n        if (token) {\r\n          window.localStorage.setItem(\"jwt\", token);\r\n        } else {\r\n          window.localStorage.removeItem(\"jwt\");\r\n        }\r\n      }\r\n    );\r\n  }\r\n\r\n  setServerError = (error: ServerError) => {\r\n    this.error = error;\r\n  };\r\n\r\n  setToken = (token: string | null) => {\r\n    this.token = token;\r\n  };\r\n\r\n  setAppLoaded = () => {\r\n    this.appLoaded = true;\r\n  };\r\n}\r\n","import { makeAutoObservable } from \"mobx\";\r\n\r\ninterface Modal {\r\n  open: boolean;\r\n  body: JSX.Element | null;\r\n}\r\n\r\nexport default class ModalStore {\r\n  modal: Modal = {\r\n    open: false,\r\n    body: null,\r\n  };\r\n\r\n  constructor() {\r\n    makeAutoObservable(this);\r\n  }\r\n  openModal = (content: JSX.Element) => {\r\n    this.modal.open = true;\r\n    this.modal.body = content;\r\n  };\r\n\r\n  closeModal = () => {\r\n    this.modal.open = false;\r\n    this.modal.body = null;\r\n  };\r\n}\r\n","import { Activity } from \"./../Models/activity\";\r\nimport { store } from \"./store\";\r\nimport { makeAutoObservable, runInAction } from \"mobx\";\r\nimport {\r\n  HubConnection,\r\n  HubConnectionBuilder,\r\n  LogLevel,\r\n} from \"@microsoft/signalr\";\r\nimport { ChatComment } from \"../Models/comment\";\r\n\r\nexport default class CommentStore {\r\n  comments: ChatComment[] = [];\r\n  hubConnection: HubConnection | null = null;\r\n\r\n  constructor() {\r\n    makeAutoObservable(this);\r\n  }\r\n\r\n  createHubConnection = (activityId: string) => {\r\n    if (store.activityStore.selectedActivity) {\r\n      this.hubConnection = new HubConnectionBuilder()\r\n        .withUrl(process.env.REACT_APP_CHAT_URL + \"?activityId=\" + activityId, {\r\n          accessTokenFactory: () => store.userStore.user?.token!,\r\n        })\r\n        .withAutomaticReconnect()\r\n        .configureLogging(LogLevel.Information)\r\n        .build();\r\n\r\n      this.hubConnection\r\n        .start()\r\n        .catch((error) =>\r\n          console.log(\"Error establishing a connection\", error)\r\n        );\r\n\r\n      this.hubConnection.on(\"LoadComments\", (comments: ChatComment[]) => {\r\n        runInAction(() => {\r\n          comments.forEach((comment) => {\r\n            comment.createdAt = new Date(comment.createdAt + \"Z\");\r\n          });\r\n          this.comments = comments;\r\n        });\r\n      });\r\n\r\n      this.hubConnection.on(\"ReceiveComment\", (comment: ChatComment) => {\r\n        runInAction(() => {\r\n          comment.createdAt = new Date(comment.createdAt);\r\n          this.comments.unshift(comment);\r\n        });\r\n      });\r\n    }\r\n  };\r\n\r\n  stopHubConnection = () => {\r\n    this.hubConnection\r\n      ?.stop()\r\n      .catch((error) => console.log(\"Error stopping connection:\", error));\r\n  };\r\n  clearComments = () => {\r\n    this.comments = [];\r\n    this.stopHubConnection();\r\n  };\r\n\r\n  addComment = async (values: any) => {\r\n    values.activityId = store.activityStore.selectedActivity?.id;\r\n\r\n    try {\r\n      await this.hubConnection?.invoke(\"SendComment\", values);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n}\r\n","import React from \"react\";\r\nimport \"../Layout/styles.css\";\r\nimport {\r\n  Button,\r\n  Container,\r\n  Dropdown,\r\n  Icon,\r\n  Image,\r\n  Menu,\r\n} from \"semantic-ui-react\";\r\n\r\nimport { Link, NavLink } from \"react-router-dom\";\r\nimport { useStore } from \"../stores/store\";\r\nimport { observer } from \"mobx-react-lite\";\r\n\r\n//import { Container, Menu } from \"semantic-ui-react\";\r\n\r\nexport default observer(function NavBar() {\r\n  const {\r\n    userStore: { user, logout },\r\n  } = useStore();\r\n  return (\r\n    <Menu inverted fixed=\"top\">\r\n      <Container>\r\n        <Menu.Item as={NavLink} to=\"/\" exact header>\r\n          <Icon name=\"connectdevelop\" size=\"large\" />\r\n          Hexanet\r\n        </Menu.Item>\r\n        <Menu.Item name=\"Activities\" as={NavLink} to=\"/activities\" />\r\n        <Menu.Item name=\"Errors\" as={NavLink} to=\"/errors\" />\r\n        <Menu.Item>\r\n          <Button\r\n            as={NavLink}\r\n            to=\"/createActivity\"\r\n            positive\r\n            content=\"Create Activity\"\r\n          />\r\n        </Menu.Item>\r\n        <Menu.Item position=\"right\" style={{ marginRight: 30 }}>\r\n          <Image\r\n            src={user?.image || \"/assets/user.png\"}\r\n            avatar\r\n            spaced=\"right\"\r\n          />\r\n          <Dropdown pointing=\"top left\" text={user?.displayName}>\r\n            <Dropdown.Menu>\r\n              <Dropdown.Item\r\n                as={Link}\r\n                to={`/profiles/${user?.username}`}\r\n                text=\"My Profile\"\r\n                icon=\"user\"\r\n              />\r\n              <Dropdown.Item onClick={logout} text=\"Logout\" icon=\"power\" />\r\n            </Dropdown.Menu>\r\n          </Dropdown>\r\n        </Menu.Item>\r\n      </Container>\r\n    </Menu>\r\n  );\r\n});\r\n","import { observer } from \"mobx-react-lite\";\r\nimport React from \"react\";\r\nimport Calendar from \"react-calendar\";\r\nimport { Header, Menu } from \"semantic-ui-react\";\r\nimport { date } from \"yup/lib/locale\";\r\nimport { useStore } from \"../../../App/stores/store\";\r\n\r\nexport default observer(function ActivityFilters() {\r\n  const {\r\n    activityStore: { predicate, setPredicate },\r\n  } = useStore();\r\n  return (\r\n    <>\r\n      <Menu vertical size=\"large\" style={{ width: \"100%\", marginTop: 25 }}>\r\n        <Header icon=\"filter\" attached color=\"teal\" content=\"Filters\" />\r\n        <Menu.Item\r\n          content=\"All Activities\"\r\n          active={predicate.has(\"all\")}\r\n          onClick={() => setPredicate(\"all\", \"true\")}\r\n        />\r\n        <Menu.Item\r\n          content=\"I'm going\"\r\n          active={predicate.has(\"isGoing\")}\r\n          onClick={() => setPredicate(\"isGoing\", \"true\")}\r\n        />\r\n        <Menu.Item\r\n          content=\"I'm hosting\"\r\n          active={predicate.has(\"isHost\")}\r\n          onClick={() => setPredicate(\"isHost\", \"true\")}\r\n        />\r\n      </Menu>\r\n      <Header />\r\n      <Calendar\r\n        onChange={(date: Date) => setPredicate(\"startDate\", date as Date)}\r\n        value={predicate.get(\"startDate\") || new Date()}\r\n      />\r\n    </>\r\n  );\r\n});\r\n","import { observer } from \"mobx-react-lite\";\r\nimport React, { SyntheticEvent } from \"react\";\r\nimport { Button, Reveal } from \"semantic-ui-react\";\r\nimport { Profile } from \"../../App/Models/profile\";\r\nimport { useStore } from \"../../App/stores/store\";\r\ninterface Props {\r\n  profile: Profile;\r\n}\r\nexport default observer(function FollowButton({ profile }: Props) {\r\n  const { profileStore, userStore } = useStore();\r\n\r\n  const { updateFollowing, loading } = profileStore;\r\n\r\n  if (userStore.user?.username === profile.username) {\r\n    return null;\r\n  }\r\n\r\n  function handleFollow(e: SyntheticEvent, username: string) {\r\n    e.preventDefault();\r\n    profile.following\r\n      ? updateFollowing(username, false)\r\n      : updateFollowing(username, true);\r\n  }\r\n  return (\r\n    <Reveal animated=\"move\">\r\n      <Reveal.Content visible style={{ width: \"100%\" }}>\r\n        <Button\r\n          fluid\r\n          color=\"teal\"\r\n          content={profile.following ? \"Following\" : \"Not following\"}\r\n        />\r\n      </Reveal.Content>\r\n      <Reveal.Content hidden style={{ width: \"100%\" }}>\r\n        <Button\r\n          fluid\r\n          color={profile.following ? \"red\" : \"green\"}\r\n          content={profile.following ? \"Unfollow\" : \"Follow\"}\r\n          loading={loading}\r\n          onClick={(e) => handleFollow(e, profile.username)}\r\n        />\r\n      </Reveal.Content>\r\n    </Reveal>\r\n  );\r\n});\r\n","import { observer } from \"mobx-react-lite\";\r\nimport React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Card, Icon, Image } from \"semantic-ui-react\";\r\nimport { Profile } from \"../../App/Models/profile\";\r\nimport FollowButton from \"./FollowButton\";\r\ninterface Props {\r\n  profile: Profile;\r\n}\r\n\r\nexport default observer(function ProfileCard({ profile }: Props) {\r\n  function shorten(str: string | undefined) {\r\n    if (str) {\r\n      return str.length > 40 ? str.substring(0, 37) + \"...\" : str;\r\n    }\r\n  }\r\n  return (\r\n    <Card as={Link} to={`/profiles/${profile.username}`}>\r\n      <Image src={profile.image || \"/assets/user.png\"} />\r\n      <Card.Content>\r\n        <Card.Header>{profile.displayName}</Card.Header>\r\n        <Card.Description>{shorten(profile.bio)}</Card.Description>\r\n      </Card.Content>\r\n\r\n      <Card.Content extra>\r\n        <Icon name=\"user\" />\r\n        {profile.followersCount} followers\r\n      </Card.Content>\r\n      <FollowButton profile={profile} />\r\n    </Card>\r\n  );\r\n});\r\n","import { observer } from \"mobx-react-lite\";\r\nimport React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { List, Image, Popup } from \"semantic-ui-react\";\r\nimport { Profile } from \"../../../App/Models/profile\";\r\nimport ProfileCard from \"../../profiles/ProfileCard\";\r\n\r\ninterface Props {\r\n  attendees: Profile[];\r\n}\r\nexport default observer(function ActivityListItemAttendee({\r\n  attendees,\r\n}: Props) {\r\n  const styles = {\r\n    borderColor: \"orange\",\r\n    borderWidth: 3,\r\n  };\r\n  return (\r\n    <List horizontal>\r\n      {attendees.map((attendees) => (\r\n        <Popup\r\n          hoverable\r\n          key={attendees.username}\r\n          trigger={\r\n            <List.Item\r\n              key={attendees.username}\r\n              as={Link}\r\n              to={`/profiles/${attendees.username}`}\r\n            >\r\n              <Image\r\n                size=\"mini\"\r\n                circular\r\n                src={attendees.image || \"/assets/user.png\"}\r\n                bordered\r\n                style={attendees.following ? styles : null}\r\n              />\r\n            </List.Item>\r\n          }\r\n        >\r\n          <Popup.Content>\r\n            <ProfileCard profile={attendees} />\r\n          </Popup.Content>\r\n        </Popup>\r\n      ))}\r\n    </List>\r\n  );\r\n});\r\n","import { format } from \"date-fns\";\r\nimport React, { SyntheticEvent, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Button, Icon, Item, Label, Segment } from \"semantic-ui-react\";\r\nimport { Activity } from \"../../../App/Models/activity\";\r\nimport { useStore } from \"../../../App/stores/store\";\r\nimport ActivityListItemAttendee from \"./ActivityListItemAttendee\";\r\n\r\ninterface Props {\r\n  activity: Activity;\r\n}\r\nexport default function ActivityListItem({ activity }: Props) {\r\n  const { activityStore } = useStore();\r\n  const { deleteActivity, activitiesByDate, loading } = activityStore;\r\n  const [target, setTarget] = useState(\"\");\r\n  function handleActivityDelete(\r\n    e: SyntheticEvent<HTMLButtonElement>,\r\n    id: string\r\n  ) {\r\n    setTarget(e.currentTarget.name);\r\n    deleteActivity(id);\r\n  }\r\n  return (\r\n    <Segment.Group>\r\n      <Segment>\r\n        {activity.isCancelled && (\r\n          <Label\r\n            attached=\"top\"\r\n            color=\"red\"\r\n            content=\"Cancelled\"\r\n            style={{ textAlign: \"center\" }}\r\n          />\r\n        )}\r\n        <Item.Group>\r\n          <Item>\r\n            <Item.Image\r\n              style={{ marginBottom: 3 }}\r\n              size=\"tiny\"\r\n              circular\r\n              src={activity.host?.image || \"/assets/user.png\"}\r\n            />\r\n            <Item.Content>\r\n              <Item.Header as={Link} to={`/activities/${activity.id}`}>\r\n                {activity.title}\r\n              </Item.Header>\r\n              <Item.Description>\r\n                Hosted By\r\n                <Link to={`/profiles/${activity.hostUsername}`}>\r\n                  {\" \" + activity.host?.displayName}\r\n                </Link>\r\n              </Item.Description>\r\n\r\n              {activity.isHost && (\r\n                <Item.Description>\r\n                  <Label basic color=\"orange\">\r\n                    You are hosting this activity\r\n                  </Label>\r\n                </Item.Description>\r\n              )}\r\n              {activity.isGoing && !activity.isHost && (\r\n                <Item.Description>\r\n                  <Label basic color=\"green\">\r\n                    You are going to this activity\r\n                  </Label>\r\n                </Item.Description>\r\n              )}\r\n            </Item.Content>\r\n          </Item>\r\n        </Item.Group>\r\n      </Segment>\r\n\r\n      <Segment>\r\n        <span>\r\n          <Icon name=\"clock\" /> {format(activity.date!, \"dd MMM yyyy h:mm aa\")}\r\n          <Icon name=\"marker\" /> {activity.venue}\r\n        </span>\r\n      </Segment>\r\n      <Segment secondary>\r\n        <ActivityListItemAttendee attendees={activity.attendees!} />\r\n      </Segment>\r\n      <Segment clearing>\r\n        <span>{activity.description}</span>\r\n        <Button\r\n          as={Link}\r\n          to={`/activities/${activity.id}`}\r\n          color=\"teal\"\r\n          floated=\"right\"\r\n          content=\"View\"\r\n        />\r\n      </Segment>\r\n    </Segment.Group>\r\n  );\r\n}\r\n","import { Stack } from \"@mui/material\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport React, { Fragment, SyntheticEvent, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Button, Header, Item, Label, Segment } from \"semantic-ui-react\";\r\nimport { Activity } from \"../../../App/Models/activity\";\r\nimport { useStore } from \"../../../App/stores/store\";\r\nimport ActivityListItem from \"./ActivityListItem\";\r\n\r\nexport default observer(function Activitylist() {\r\n  const { activityStore } = useStore();\r\n  const { groupedActivities } = activityStore;\r\n\r\n  return (\r\n    <>\r\n      {groupedActivities.map(([group, activities]) => (\r\n        <Fragment key={group}>\r\n          <Header sub color=\"teal\">\r\n            {group}\r\n          </Header>\r\n\r\n          {activities.map((activity) => (\r\n            <ActivityListItem activity={activity} key={activity.id} />\r\n          ))}\r\n        </Fragment>\r\n      ))}\r\n    </>\r\n  );\r\n});\r\n","import React, { Fragment } from \"react\";\r\nimport { Segment, Button, Placeholder } from \"semantic-ui-react\";\r\n\r\nexport default function ActivityListItemPlaceholder() {\r\n  return (\r\n    <Fragment>\r\n      <Placeholder fluid style={{ marginTop: 25 }}>\r\n        <Segment.Group>\r\n          <Segment style={{ minHeight: 110 }}>\r\n            <Placeholder>\r\n              <Placeholder.Header image>\r\n                <Placeholder.Line />\r\n                <Placeholder.Line />\r\n              </Placeholder.Header>\r\n              <Placeholder.Paragraph>\r\n                <Placeholder.Line />\r\n              </Placeholder.Paragraph>\r\n            </Placeholder>\r\n          </Segment>\r\n          <Segment>\r\n            <Placeholder>\r\n              <Placeholder.Line />\r\n              <Placeholder.Line />\r\n            </Placeholder>\r\n          </Segment>\r\n          <Segment secondary style={{ minHeight: 70 }} />\r\n          <Segment clearing>\r\n            <Button disabled color=\"blue\" floated=\"right\" content=\"View\" />\r\n          </Segment>\r\n        </Segment.Group>\r\n      </Placeholder>\r\n    </Fragment>\r\n  );\r\n}\r\n","import { observer } from \"mobx-react-lite\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { Button, Grid, GridColumn, List, Loader } from \"semantic-ui-react\";\r\nimport LoadingComponents from \"../../../App/Layout/LoadingComponents\";\r\nimport { Activity } from \"../../../App/Models/activity\";\r\nimport { PagingParams } from \"../../../App/Models/pagination\";\r\nimport { useStore } from \"../../../App/stores/store\";\r\nimport ActivityDetails from \"../details/ActivityDetails\";\r\nimport ActivityForm from \"../form/ActivityForm\";\r\nimport ActivityFilters from \"./ActivityFilters\";\r\nimport Activitylist from \"./ActivityList\";\r\nimport InfiniteScroll from \"react-infinite-scroller\";\r\nimport ActivityListItemPlaceholder from \"./ActivityListItemPlaceholder\";\r\n\r\nexport default observer(function ActivityDashboard() {\r\n  const { activityStore } = useStore();\r\n  const {\r\n    selectedActivity,\r\n    editMode,\r\n    loadActivities,\r\n    activityRegistry,\r\n    pagination,\r\n    setPagingParams,\r\n  } = activityStore;\r\n\r\n  const [loadingNext, setLoadingNext] = useState(false);\r\n\r\n  function handleGetNext() {\r\n    setLoadingNext(true);\r\n    setPagingParams(new PagingParams(pagination!.currentPage + 1));\r\n    loadActivities().then(() => setLoadingNext(false));\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (activityRegistry.size <= 1) loadActivities();\r\n  }, [activityStore]);\r\n\r\n  return (\r\n    <Grid>\r\n      <Grid.Column width=\"10\">\r\n        {activityStore.loadingInitial && !loadingNext ? (\r\n          <>\r\n            <ActivityListItemPlaceholder />\r\n            <ActivityListItemPlaceholder />\r\n          </>\r\n        ) : (\r\n          <InfiniteScroll\r\n            pageStart={0}\r\n            loadMore={handleGetNext}\r\n            hasMore={\r\n              !loadingNext &&\r\n              !!pagination &&\r\n              pagination.currentPage < pagination.totalPages\r\n            }\r\n            initialLoad={false}\r\n          >\r\n            <Activitylist />\r\n          </InfiniteScroll>\r\n        )}\r\n      </Grid.Column>\r\n      <Grid.Column width=\"6\">\r\n        <ActivityFilters />\r\n      </Grid.Column>\r\n\r\n      <Grid.Column width={10}>\r\n        <Loader active={loadingNext} />\r\n      </Grid.Column>\r\n    </Grid>\r\n  );\r\n});\r\n","import React from \"react\";\r\nimport { Dimmer, Loader } from \"semantic-ui-react\";\r\ninterface Props {\r\n  inverted?: boolean;\r\n  content?: string;\r\n}\r\nexport default function LoadingComponents({\r\n  inverted = true,\r\n  content = \"Loading...\",\r\n}: Props) {\r\n  return (\r\n    <Dimmer active={true} inverted={inverted}>\r\n      <Loader content={content} />\r\n    </Dimmer>\r\n  );\r\n}\r\n","import { useField } from \"formik\";\r\nimport React from \"react\";\r\nimport { Form, Label } from \"semantic-ui-react\";\r\n\r\ninterface Props {\r\n  placeholder: string;\r\n  name: string;\r\n  type?: string;\r\n  label?: string;\r\n}\r\n\r\nexport default function MyTextInput(props: Props) {\r\n  const [field, meta] = useField(props.name);\r\n\r\n  return (\r\n    <Form.Field error={meta.touched && !!meta.error}>\r\n      <label>{props.label}</label>\r\n      <input {...field} {...props} />\r\n      {meta.touched && meta.error ? (\r\n        <Label basic color=\"red\">\r\n          {meta.error}\r\n        </Label>\r\n      ) : null}\r\n    </Form.Field>\r\n  );\r\n}\r\n","import { ErrorMessage, Form, Formik } from \"formik\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport React from \"react\";\r\nimport { Button, Header, Label } from \"semantic-ui-react\";\r\nimport MyTextInput from \"../../App/common/form/MyTextInput\";\r\nimport { useStore } from \"../../App/stores/store\";\r\n\r\nexport default observer(function LoginForm() {\r\n  const { userStore } = useStore();\r\n  return (\r\n    <Formik\r\n      initialValues={{ email: \"\", password: \"\", error: null }}\r\n      onSubmit={(values, { setErrors }) =>\r\n        userStore\r\n          .login(values)\r\n          .catch((error) => setErrors({ error: \"Invalid email or password\" }))\r\n      }\r\n    >\r\n      {({ handleSubmit, isSubmitting, errors }) => (\r\n        <Form className=\"ui form\" onSubmit={handleSubmit} autoComplete=\"off\">\r\n          <Header\r\n            as=\"h2\"\r\n            content=\"Login to Hexanet\"\r\n            color=\"teal\"\r\n            textAlign=\"center\"\r\n          />\r\n          <MyTextInput name=\"email\" placeholder=\"Email\" type=\"email\" />\r\n          <MyTextInput name=\"password\" placeholder=\"Password\" type=\"password\" />\r\n          <ErrorMessage\r\n            name=\"error\"\r\n            render={() => (\r\n              <Label\r\n                style={{ marginBottom: 10 }}\r\n                basic\r\n                color=\"red\"\r\n                content={errors.error}\r\n              />\r\n            )}\r\n          />\r\n\r\n          <Button\r\n            positive\r\n            loading={isSubmitting}\r\n            content=\"Login\"\r\n            type=\"submit\"\r\n            fluid\r\n          />\r\n        </Form>\r\n      )}\r\n    </Formik>\r\n  );\r\n});\r\n","import React from \"react\";\r\nimport { Message } from \"semantic-ui-react\";\r\n\r\ninterface Props {\r\n  errors: any;\r\n}\r\n\r\nexport default function ValidationErrors({ errors }: Props) {\r\n  return (\r\n    <Message error>\r\n      {errors && (\r\n        <Message.List>\r\n          {errors.map((err: any, i: any) => (\r\n            <Message.Item key={i}>{err}</Message.Item>\r\n          ))}\r\n        </Message.List>\r\n      )}\r\n    </Message>\r\n  );\r\n}\r\n","import { ErrorMessage, Form, Formik } from \"formik\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport React from \"react\";\r\nimport { Button, Header, Label } from \"semantic-ui-react\";\r\nimport MyTextInput from \"../../App/common/form/MyTextInput\";\r\nimport { useStore } from \"../../App/stores/store\";\r\nimport * as Yup from \"yup\";\r\nimport ValidatsionErrors from \"../errors/ValidationErrors\";\r\nimport ValidationErrors from \"../errors/ValidationErrors\";\r\nexport default observer(function RegisterForm() {\r\n  const { userStore } = useStore();\r\n  return (\r\n    <Formik\r\n      initialValues={{ email: \"\", password: \"\", error: null }}\r\n      onSubmit={(values, { setErrors }) =>\r\n        userStore.register(values).catch((error) => setErrors({ error: error }))\r\n      }\r\n      validationSchema={Yup.object({\r\n        displayName: Yup.string().required(),\r\n        username: Yup.string().required(),\r\n        email: Yup.string().required().email(),\r\n        password: Yup.string().required(),\r\n      })}\r\n    >\r\n      {({ handleSubmit, isSubmitting, errors, isValid, dirty }) => (\r\n        <Form\r\n          className=\"ui form error\"\r\n          onSubmit={handleSubmit}\r\n          autoComplete=\"off\"\r\n        >\r\n          <Header\r\n            as=\"h2\"\r\n            content=\"Signup to Hexanet\"\r\n            color=\"teal\"\r\n            textAlign=\"center\"\r\n          />\r\n\r\n          <MyTextInput name=\"displayName\" placeholder=\"Display Name\" />\r\n          <MyTextInput name=\"username\" placeholder=\"Username\" />\r\n          <MyTextInput name=\"email\" placeholder=\"Email\" type=\"email\" />\r\n          <MyTextInput name=\"password\" placeholder=\"Password\" type=\"password\" />\r\n          <ErrorMessage\r\n            name=\"error\"\r\n            render={() => <ValidationErrors errors={errors.error} />}\r\n          />\r\n\r\n          <Button\r\n            positive\r\n            disabled={!isValid || !dirty || isSubmitting}\r\n            loading={isSubmitting}\r\n            content=\"Register\"\r\n            type=\"submit\"\r\n            fluid\r\n          />\r\n        </Form>\r\n      )}\r\n    </Formik>\r\n  );\r\n});\r\n","import { observer } from \"mobx-react-lite\";\r\nimport React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport {\r\n  Container,\r\n  Header,\r\n  Segment,\r\n  Image,\r\n  Button,\r\n  Icon,\r\n} from \"semantic-ui-react\";\r\nimport { useStore } from \"../../App/stores/store\";\r\nimport LoginForm from \"../users/LoginForm\";\r\nimport RegisterForm from \"../users/RegisterForm\";\r\n\r\nexport default observer(function HomePage() {\r\n  const { userStore, modalStore } = useStore();\r\n  return (\r\n    <Segment inverted textAlign=\"center\" vertical className=\"masthead\">\r\n      <Container>\r\n        <Header as=\"h1\" inverted>\r\n          <Icon name=\"connectdevelop\" size=\"large\" />\r\n          Hexanet\r\n        </Header>\r\n        {userStore.isLoggedIn ? (\r\n          <>\r\n            <Header as=\"h2\" inverted content=\"Welcome to Hexanet\" />\r\n            <Button as={Link} to=\"/activities\" size=\"huge\" inverted>\r\n              Go to Activities\r\n            </Button>\r\n          </>\r\n        ) : (\r\n          <>\r\n            <Button\r\n              onClick={() => modalStore.openModal(<LoginForm />)}\r\n              size=\"huge\"\r\n              inverted\r\n            >\r\n              Login\r\n            </Button>\r\n            <Button\r\n              onClick={() => modalStore.openModal(<RegisterForm />)}\r\n              size=\"huge\"\r\n              inverted\r\n            >\r\n              Register\r\n            </Button>\r\n          </>\r\n        )}\r\n      </Container>\r\n    </Segment>\r\n  );\r\n});\r\n","import { useField } from \"formik\";\r\nimport React from \"react\";\r\nimport { Form, Label } from \"semantic-ui-react\";\r\n\r\ninterface Props {\r\n  placeholder: string;\r\n  name: string;\r\n  rows: number;\r\n  label?: string;\r\n}\r\n\r\nexport default function MyTextArea(props: Props) {\r\n  const [field, meta] = useField(props.name);\r\n\r\n  return (\r\n    <Form.Field error={meta.touched && !!meta.error}>\r\n      <label>{props.label}</label>\r\n      <textarea {...field} {...props} />\r\n      {meta.touched && meta.error ? (\r\n        <Label basic color=\"red\">\r\n          {meta.error}\r\n        </Label>\r\n      ) : null}\r\n    </Form.Field>\r\n  );\r\n}\r\n","import { useField } from \"formik\";\r\nimport React from \"react\";\r\nimport { Form, Label, Select } from \"semantic-ui-react\";\r\n\r\ninterface Props {\r\n  placeholder: string;\r\n  name: string;\r\n  options: any;\r\n  label?: string;\r\n}\r\n\r\nexport default function MySelectInput(props: Props) {\r\n  const [field, meta, helpers] = useField(props.name);\r\n\r\n  return (\r\n    <Form.Field error={meta.touched && !!meta.error}>\r\n      <label>{props.label}</label>\r\n      <Select\r\n        clearable\r\n        options={props.options}\r\n        value={field.value || null}\r\n        onChange={(e, d) => helpers.setValue(d.value)}\r\n        onBlur={() => helpers.setTouched(true)}\r\n        placeholder={props.placeholder}\r\n      />\r\n\r\n      {meta.touched && meta.error ? (\r\n        <Label basic color=\"red\">\r\n          {meta.error}\r\n        </Label>\r\n      ) : null}\r\n    </Form.Field>\r\n  );\r\n}\r\n","export const categoryOption = [\r\n  { text: \"Drinks\", value: \"drinks\" },\r\n  { text: \"Culture\", value: \"culture\" },\r\n  { text: \"Film\", value: \"film\" },\r\n  { text: \"Food\", value: \"food\" },\r\n  { text: \"Music\", value: \"music\" },\r\n  { text: \"Travel\", value: \"travel\" },\r\n];\r\n","import { useField } from \"formik\";\r\nimport React from \"react\";\r\nimport ReactDatePicker from \"react-datepicker\";\r\nimport { Form, Label } from \"semantic-ui-react\";\r\nimport DatePicker, { ReactDatePickerProps } from \"react-datepicker\";\r\n\r\nexport default function MyDateInput(props: Partial<ReactDatePickerProps>) {\r\n  const [field, meta, helpers] = useField(props.name!);\r\n\r\n  return (\r\n    <Form.Field error={meta.touched && !!meta.error}>\r\n      <DatePicker\r\n        {...field}\r\n        {...props}\r\n        selected={(field.value && new Date(field.value)) || null}\r\n        onChange={(value) => helpers.setValue(value)}\r\n      />\r\n      {meta.touched && meta.error ? (\r\n        <Label basic color=\"red\">\r\n          {meta.error}\r\n        </Label>\r\n      ) : null}\r\n    </Form.Field>\r\n  );\r\n}\r\n","import { observer } from \"mobx-react-lite\";\r\nimport React, { ChangeEvent, useEffect, useState } from \"react\";\r\nimport { useHistory, useParams } from \"react-router\";\r\nimport { Button, FormField, Header, Label, Segment } from \"semantic-ui-react\";\r\nimport LoadingComponents from \"../../../App/Layout/LoadingComponents\";\r\nimport { Activity, ActivityFormValues } from \"../../../App/Models/activity\";\r\nimport { useStore } from \"../../../App/stores/store\";\r\nimport { v4 as uuid } from \"uuid\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Formik, Form, Field, ErrorMessage } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport MyTextInput from \"../../../App/common/form/MyTextInput\";\r\nimport MyTextArea from \"./MyTextArea\";\r\nimport MySelectInput from \"./MySelectInput\";\r\nimport { categoryOption } from \"../../../App/common/form/options/categoryOptions\";\r\nimport MyDateInput from \"./MyDateInput\";\r\n\r\nexport default observer(function ActivityForm() {\r\n  const history = useHistory();\r\n  const { activityStore } = useStore();\r\n  const {\r\n    selectedActivity,\r\n    createActivity,\r\n    updateActivity,\r\n    loading,\r\n    loadActivity,\r\n    loadingInitial,\r\n  } = activityStore;\r\n\r\n  const { id } = useParams<{ id: string }>();\r\n\r\n  const [activity, setActivity] = useState<ActivityFormValues>(\r\n    new ActivityFormValues()\r\n  );\r\n\r\n  const validationSchema = Yup.object({\r\n    title: Yup.string().required(\"The activity title is required\"),\r\n    description: Yup.string().required(\"The activity description is required\"),\r\n    category: Yup.string().required(),\r\n    date: Yup.string().required(\"Date is required\").nullable(),\r\n    venue: Yup.string().required(),\r\n    city: Yup.string().required(),\r\n  });\r\n  useEffect(() => {\r\n    if (id) {\r\n      loadActivity(id).then((activity) =>\r\n        setActivity(new ActivityFormValues(activity))\r\n      );\r\n    }\r\n  }, [id, loadActivity]);\r\n\r\n  function handleFormSubmit(activity: ActivityFormValues) {\r\n    if (!activity.id) {\r\n      let newActivity = {\r\n        ...activity,\r\n        id: uuid(),\r\n      };\r\n      createActivity(newActivity).then(() =>\r\n        history.push(`/activities/${newActivity.id}`)\r\n      );\r\n    } else {\r\n      updateActivity(activity).then(() =>\r\n        history.push(`/activities/${activity.id}`)\r\n      );\r\n    }\r\n  }\r\n\r\n  if (loadingInitial) {\r\n    return <LoadingComponents content=\"Loading activity...\" />;\r\n  }\r\n  return (\r\n    <Segment clearing>\r\n      <Header content=\"Activity Details\" sub color=\"teal\" />\r\n      <Formik\r\n        validationSchema={validationSchema}\r\n        enableReinitialize\r\n        initialValues={activity}\r\n        onSubmit={(values) => handleFormSubmit(values)}\r\n      >\r\n        {({ handleSubmit, isValid, isSubmitting, dirty }) => (\r\n          <Form className=\"ui form\" onSubmit={handleSubmit} autoComplete=\"off\">\r\n            <MyTextInput name=\"title\" placeholder=\"title\" />\r\n\r\n            <MyTextArea rows={3} placeholder=\"Description\" name=\"description\" />\r\n            <MySelectInput\r\n              options={categoryOption}\r\n              placeholder=\"Category\"\r\n              name=\"category\"\r\n            />\r\n            <MyDateInput\r\n              placeholderText=\"Date\"\r\n              name=\"date\"\r\n              showTimeSelect\r\n              timeCaption=\"time\"\r\n              dateFormat=\"MMMM d, yyyy h:mm aa\"\r\n            />\r\n            <Header content=\"Location Details\" sub color=\"teal\" />\r\n            <MyTextInput placeholder=\"City\" name=\"city\" />\r\n            <MyTextInput placeholder=\"Venue\" name=\"venue\" />\r\n            <Button\r\n              disabled={isSubmitting || !dirty || !isValid}\r\n              loading={isSubmitting}\r\n              floated=\"right\"\r\n              positive\r\n              type=\"submit\"\r\n              content=\"Submit\"\r\n            />\r\n            <Button\r\n              as={Link}\r\n              to=\"/activities\"\r\n              floated=\"right\"\r\n              type=\"button\"\r\n              content=\"Cancel\"\r\n            />\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n    </Segment>\r\n  );\r\n});\r\n","import { Formik, Form, Field, FieldProps } from \"formik\";\r\nimport { values } from \"mobx\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport React, { useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Segment, Header, Comment, Button, Loader } from \"semantic-ui-react\";\r\nimport { useStore } from \"../../../App/stores/store\";\r\nimport MyTextArea from \"../form/MyTextArea\";\r\nimport * as Yup from \"yup\";\r\nimport { formatDistanceToNow } from \"date-fns\";\r\n\r\ninterface Props {\r\n  activityId: string;\r\n}\r\nexport default observer(function ActivityDetailedChat({ activityId }: Props) {\r\n  const { commentStore } = useStore();\r\n\r\n  useEffect(() => {\r\n    if (activityId) {\r\n      commentStore.createHubConnection(activityId);\r\n    }\r\n    return () => {\r\n      commentStore.clearComments();\r\n    };\r\n  }, [commentStore, activityId]);\r\n  return (\r\n    <>\r\n      <Segment\r\n        textAlign=\"center\"\r\n        attached=\"top\"\r\n        inverted\r\n        color=\"teal\"\r\n        style={{ border: \"none\" }}\r\n      >\r\n        <Header>Chat about this event</Header>\r\n      </Segment>\r\n      <Segment attached clearing>\r\n        <Formik\r\n          onSubmit={(values, { resetForm }) =>\r\n            commentStore.addComment(values).then(() => resetForm())\r\n          }\r\n          initialValues={{ body: \"\" }}\r\n          validationSchema={Yup.object({\r\n            body: Yup.string().required(),\r\n          })}\r\n        >\r\n          {({ isSubmitting, isValid, handleSubmit }) => (\r\n            <Form className=\"ui form\">\r\n              <Field name=\"body\">\r\n                {(props: FieldProps) => (\r\n                  <div style={{ position: \"relative\" }}>\r\n                    <Loader active={isSubmitting} />\r\n\r\n                    <textarea\r\n                      placeholder=\"Enter your comment (Enter to submit), SHIFT+ enter for new line\"\r\n                      rows={2}\r\n                      {...props.field}\r\n                      onKeyPress={(e) => {\r\n                        if (e.key == \"Enter\" && e.shiftKey) {\r\n                          return;\r\n                        }\r\n                        if (e.key === \"Enter\" && !e.shiftKey) {\r\n                          e.preventDefault();\r\n                          isValid && handleSubmit();\r\n                        }\r\n                      }}\r\n                    />\r\n                  </div>\r\n                )}\r\n              </Field>\r\n            </Form>\r\n          )}\r\n        </Formik>\r\n        <Comment.Group>\r\n          {commentStore.comments.map((comment) => (\r\n            <Comment key={comment.id}>\r\n              <Comment.Avatar src={comment.image || \"/assets/user.png\"} />\r\n              <Comment.Content>\r\n                <Comment.Author as={Link} to={`/profiles/${comment.username}`}>\r\n                  {comment.displayName}\r\n                </Comment.Author>\r\n                <Comment.Metadata>\r\n                  {console.log(comment.createdAt)}\r\n                  <div>{formatDistanceToNow(comment.createdAt)} ago</div>\r\n                </Comment.Metadata>\r\n                <Comment.Text style={{ whiteSpace: \"pre-wrap\" }}>\r\n                  {comment.body}\r\n                </Comment.Text>\r\n              </Comment.Content>\r\n            </Comment>\r\n          ))}\r\n        </Comment.Group>\r\n      </Segment>\r\n    </>\r\n  );\r\n});\r\n","import { format } from \"date-fns\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport React from \"react\";\r\nimport { Segment, Grid, Icon } from \"semantic-ui-react\";\r\nimport { Activity } from \"../../../App/Models/activity\";\r\n\r\ninterface Props {\r\n  activity: Activity;\r\n}\r\n\r\nexport default observer(function ActivityDetailedInfo({ activity }: Props) {\r\n  return (\r\n    <Segment.Group>\r\n      <Segment attached=\"top\">\r\n        <Grid>\r\n          <Grid.Column width={1}>\r\n            <Icon size=\"large\" color=\"teal\" name=\"info\" />\r\n          </Grid.Column>\r\n          <Grid.Column width={15}>\r\n            <p>{activity.description}</p>\r\n          </Grid.Column>\r\n        </Grid>\r\n      </Segment>\r\n      <Segment attached>\r\n        <Grid verticalAlign=\"middle\">\r\n          <Grid.Column width={1}>\r\n            <Icon name=\"calendar\" size=\"large\" color=\"teal\" />\r\n          </Grid.Column>\r\n          <Grid.Column width={15}>\r\n            <span>{format(activity.date!, \"dd MMM yyyy h:mm aa\")}</span>\r\n          </Grid.Column>\r\n        </Grid>\r\n      </Segment>\r\n      <Segment attached>\r\n        <Grid verticalAlign=\"middle\">\r\n          <Grid.Column width={1}>\r\n            <Icon name=\"marker\" size=\"large\" color=\"teal\" />\r\n          </Grid.Column>\r\n          <Grid.Column width={11}>\r\n            <span>\r\n              {activity.venue}, {activity.city}\r\n            </span>\r\n          </Grid.Column>\r\n        </Grid>\r\n      </Segment>\r\n    </Segment.Group>\r\n  );\r\n});\r\n","import React from \"react\";\r\nimport { Segment, List, Label, Item, Image } from \"semantic-ui-react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport { Activity } from \"../../../App/Models/activity\";\r\n\r\ninterface Props {\r\n  activity: Activity;\r\n}\r\n\r\nexport default observer(function ActivityDetailedSidebar({\r\n  activity: { attendees, host },\r\n}: Props) {\r\n  if (!attendees) {\r\n    return null;\r\n  }\r\n  return (\r\n    <>\r\n      <Segment\r\n        textAlign=\"center\"\r\n        style={{ border: \"none\" }}\r\n        attached=\"top\"\r\n        secondary\r\n        inverted\r\n        color=\"teal\"\r\n      >\r\n        {attendees.length} {attendees.length === 1 ? \"Person\" : \"People\"} going\r\n      </Segment>\r\n      <Segment attached>\r\n        <List relaxed divided>\r\n          {attendees.map((attendee) => (\r\n            <Item style={{ position: \"relative\" }} key={attendee.username}>\r\n              {attendee.username === host?.username && (\r\n                <Label\r\n                  style={{ position: \"absolute\" }}\r\n                  color=\"black\"\r\n                  ribbon=\"right\"\r\n                >\r\n                  Host\r\n                </Label>\r\n              )}\r\n              <Image size=\"tiny\" src={attendee.image || \"/assets/user.png\"} />\r\n              <Item.Content verticalAlign=\"middle\">\r\n                <Item.Header as=\"h3\">\r\n                  <Link to={`/profiles/${attendee.username}`}>\r\n                    {attendee.displayName}\r\n                  </Link>\r\n                </Item.Header>\r\n                {attendee.following && (\r\n                  <Item.Extra style={{ color: \"orange\" }}>Following</Item.Extra>\r\n                )}\r\n              </Item.Content>\r\n            </Item>\r\n          ))}\r\n        </List>\r\n      </Segment>\r\n    </>\r\n  );\r\n});\r\n","import { format } from \"date-fns\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Button, Header, Item, Segment, Image, Label } from \"semantic-ui-react\";\r\nimport { Activity } from \"../../../App/Models/activity\";\r\nimport { useStore } from \"../../../App/stores/store\";\r\n\r\nconst activityImageStyle = {\r\n  filter: \"brightness(30%)\",\r\n};\r\n\r\nconst activityImageTextStyle = {\r\n  position: \"absolute\",\r\n  bottom: \"5%\",\r\n  left: \"5%\",\r\n  width: \"100%\",\r\n  height: \"auto\",\r\n  color: \"white\",\r\n};\r\n\r\ninterface Props {\r\n  activity: Activity;\r\n}\r\n\r\nexport default observer(function ActivityDetailedHeader({ activity }: Props) {\r\n  const {\r\n    activityStore: { updateAttendance, loading, cancelActivityToggle },\r\n  } = useStore();\r\n\r\n  const btnclr = () => {\r\n    if (activity.isCancelled) {\r\n      return \"green\";\r\n    } else {\r\n      return \"red\";\r\n    }\r\n  };\r\n  return (\r\n    <Segment.Group>\r\n      <Segment basic attached=\"top\" style={{ padding: \"0\" }}>\r\n        {activity.isCancelled && (\r\n          <Label\r\n            style={{ position: \"absolute\", zIndex: 1000, left: -14, top: 20 }}\r\n            ribbon\r\n            color=\"red\"\r\n            content=\"Cancelled\"\r\n          />\r\n        )}\r\n        <Image\r\n          src={`/assets/categoryImages/${activity.category}.jpg`}\r\n          fluid\r\n          style={activityImageStyle}\r\n        />\r\n        <Segment style={activityImageTextStyle} basic>\r\n          <Item.Group>\r\n            <Item>\r\n              <Item.Content>\r\n                <Header\r\n                  size=\"huge\"\r\n                  content={activity.title}\r\n                  style={{ color: \"white\" }}\r\n                />\r\n                <p>{format(activity.date!, \"dd MMM yyyy\")}</p>\r\n                <p>\r\n                  Hosted by{\" \"}\r\n                  <strong>\r\n                    <Link to={`/profiles/${activity.host?.username}`}>\r\n                      {activity.host?.displayName}{\" \"}\r\n                    </Link>\r\n                  </strong>\r\n                </p>\r\n              </Item.Content>\r\n            </Item>\r\n          </Item.Group>\r\n        </Segment>\r\n      </Segment>\r\n      <Segment clearing attached=\"bottom\">\r\n        {activity.isHost ? (\r\n          <>\r\n            <Button\r\n              color={btnclr()}\r\n              floated=\"left\"\r\n              basic\r\n              content={\r\n                activity.isCancelled\r\n                  ? \"Re-activate Activity\"\r\n                  : \"Cancel Activity\"\r\n              }\r\n              onClick={cancelActivityToggle}\r\n              loading={loading}\r\n            />\r\n            <Button\r\n              disabled={activity.isCancelled}\r\n              as={Link}\r\n              to={`/manage/${activity.id}`}\r\n              color=\"black\"\r\n              floated=\"right\"\r\n            >\r\n              Manage Event\r\n            </Button>\r\n          </>\r\n        ) : activity.isGoing ? (\r\n          <Button loading={loading} onClick={updateAttendance}>\r\n            Cancel attendance\r\n          </Button>\r\n        ) : (\r\n          <Button\r\n            disabled={activity.isCancelled}\r\n            loading={loading}\r\n            onClick={updateAttendance}\r\n            color=\"teal\"\r\n          >\r\n            Join Activity\r\n          </Button>\r\n        )}\r\n      </Segment>\r\n    </Segment.Group>\r\n  );\r\n});\r\n","import { gridClasses } from \"@mui/material\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport React, { useEffect } from \"react\";\r\nimport { useParams } from \"react-router\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Button, Card, Grid, Icon, Image } from \"semantic-ui-react\";\r\nimport LoadingComponents from \"../../../App/Layout/LoadingComponents\";\r\nimport { Activity } from \"../../../App/Models/activity\";\r\nimport { useStore } from \"../../../App/stores/store\";\r\nimport ActivityDetailedChat from \"./ActivityDetailedChat\";\r\nimport ActivityDetailedInfo from \"./ActivityDetailedInfo\";\r\nimport ActivityDetailedSideBar from \"./ActivityDetailedSideBar\";\r\nimport ActivityDetailsHeader from \"./ActivityDetailsHeader\";\r\n\r\nexport default observer(function ActivityDetails() {\r\n  const { activityStore } = useStore();\r\n  const {\r\n    selectedActivity: activity,\r\n    loadActivity,\r\n    loadingInitial,\r\n    clearSelectedActivity,\r\n  } = activityStore;\r\n  const { id } = useParams<{ id: string }>();\r\n\r\n  useEffect(() => {\r\n    if (id) {\r\n      loadActivity(id);\r\n    }\r\n\r\n    return () => clearSelectedActivity();\r\n  }, [id, loadActivity, clearSelectedActivity]);\r\n\r\n  if (loadingInitial || !activity) return <LoadingComponents />;\r\n\r\n  return (\r\n    <Grid>\r\n      <Grid.Column width={10}>\r\n        <ActivityDetailsHeader activity={activity} />\r\n        <ActivityDetailedInfo activity={activity} />\r\n        <ActivityDetailedChat activityId={activity.id} />\r\n      </Grid.Column>\r\n      <Grid.Column width={6}>\r\n        <ActivityDetailedSideBar activity={activity} />\r\n      </Grid.Column>\r\n    </Grid>\r\n  );\r\n});\r\n","import React from \"react\";\r\nimport { Button, Header, Segment } from \"semantic-ui-react\";\r\nimport axios from \"axios\";\r\n\r\nexport default function TestErrors() {\r\n  const baseUrl = process.env.REACT_APP_API_URL;\r\n\r\n  function handleNotFound() {\r\n    axios\r\n      .get(baseUrl + \"buggy/not-found\")\r\n      .catch((err) => console.log(err.response));\r\n  }\r\n\r\n  function handleBadRequest() {\r\n    axios\r\n      .get(baseUrl + \"buggy/bad-request\")\r\n      .catch((err) => console.log(err.response));\r\n  }\r\n\r\n  function handleServerError() {\r\n    axios\r\n      .get(baseUrl + \"buggy/server-error\")\r\n      .catch((err) => console.log(err.response));\r\n  }\r\n\r\n  function handleUnauthorised() {\r\n    axios\r\n      .get(baseUrl + \"buggy/unauthorised\")\r\n      .catch((err) => console.log(err.response));\r\n  }\r\n\r\n  function handleBadGuid() {\r\n    axios\r\n      .get(baseUrl + \"activities/notaguid\")\r\n      .catch((err) => console.log(err.response));\r\n  }\r\n\r\n  function handleValidationError() {\r\n    axios\r\n      .post(baseUrl + \"activities\", {})\r\n      .catch((err) => console.log(err.response));\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Header as=\"h1\" content=\"Test Error component\" />\r\n      <Segment>\r\n        <Button.Group widths=\"7\">\r\n          <Button onClick={handleNotFound} content=\"Not Found\" basic primary />\r\n          <Button\r\n            onClick={handleBadRequest}\r\n            content=\"Bad Request\"\r\n            basic\r\n            primary\r\n          />\r\n          <Button\r\n            onClick={handleValidationError}\r\n            content=\"Validation Error\"\r\n            basic\r\n            primary\r\n          />\r\n          <Button\r\n            onClick={handleServerError}\r\n            content=\"Server Error\"\r\n            basic\r\n            primary\r\n          />\r\n          <Button\r\n            onClick={handleUnauthorised}\r\n            content=\"Unauthorised\"\r\n            basic\r\n            primary\r\n          />\r\n          <Button onClick={handleBadGuid} content=\"Bad Guid\" basic primary />\r\n        </Button.Group>\r\n      </Segment>\r\n    </>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Button, Header, Icon, Segment } from \"semantic-ui-react\";\r\n\r\nexport default function NotFound() {\r\n  return (\r\n    <Segment placeholder>\r\n      <Header icon>\r\n        <Icon name=\"search\" />\r\n        Oops - we've looked everywhere and could not find this.\r\n      </Header>\r\n      <Segment.Inline>\r\n        <Button as={Link} to=\"/activities\" primary>\r\n          Return to activities page\r\n        </Button>\r\n      </Segment.Inline>\r\n    </Segment>\r\n  );\r\n}\r\n","import { observer } from \"mobx-react-lite\";\r\nimport React from \"react\";\r\nimport { Container, Header, Segment } from \"semantic-ui-react\";\r\nimport { useStore } from \"../../App/stores/store\";\r\n\r\nexport default observer(function ServerError() {\r\n  const { commonStore } = useStore();\r\n  return (\r\n    <Container>\r\n      <Header as=\"h1\" content=\"Server Error\" />\r\n      <Header sub as=\"h5\" color=\"red\" content={commonStore.error?.message} />\r\n      {commonStore.error?.details && (\r\n        <Segment>\r\n          <Header as=\"h4\" content=\"Stack trace\" color=\"teal\" />\r\n          <code style={{ marginTop: \"10px\" }}>{commonStore.error.details}</code>\r\n        </Segment>\r\n      )}\r\n    </Container>\r\n  );\r\n});\r\n","import { observer } from \"mobx-react-lite\";\r\nimport React from \"react\";\r\nimport { Modal } from \"semantic-ui-react\";\r\nimport { useStore } from \"../../stores/store\";\r\n\r\nexport default observer(function ModalContainer() {\r\n  const { modalStore } = useStore();\r\n  return (\r\n    <Modal\r\n      open={modalStore.modal.open}\r\n      onClose={modalStore.closeModal}\r\n      size=\"mini\"\r\n    >\r\n      <Modal.Content>{modalStore.modal.body}</Modal.Content>\r\n    </Modal>\r\n  );\r\n});\r\n","import { Form, Formik } from \"formik\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport { Button } from \"semantic-ui-react\";\r\n\r\nimport * as Yup from \"yup\";\r\nimport { useStore } from \"../../App/stores/store\";\r\nimport MyTextInput from \"../../App/common/form/MyTextInput\";\r\nimport MyTextArea from \"../activities/form/MyTextArea\";\r\ninterface Props {\r\n  setEditMode: (editMode: boolean) => void;\r\n}\r\nexport default observer(function ProfileEditForm({ setEditMode }: Props) {\r\n  const {\r\n    profileStore: { profile, updateProfile },\r\n  } = useStore();\r\n  return (\r\n    <Formik\r\n      initialValues={{ displayName: profile?.displayName, bio: profile?.bio }}\r\n      onSubmit={(values) => {\r\n        updateProfile(values).then(() => {\r\n          setEditMode(false);\r\n        });\r\n      }}\r\n      validationSchema={Yup.object({\r\n        displayName: Yup.string().required(),\r\n      })}\r\n    >\r\n      {({ isSubmitting, isValid, dirty }) => (\r\n        <Form className=\"ui form\">\r\n          <MyTextInput placeholder=\"Display Name\" name=\"displayName\" />\r\n          <MyTextArea rows={3} placeholder=\"Add your bio\" name=\"bio\" />\r\n          <Button\r\n            positive\r\n            type=\"submit\"\r\n            loading={isSubmitting}\r\n            content=\"Update profile\"\r\n            floated=\"right\"\r\n            disabled={!isValid || !dirty}\r\n          />\r\n        </Form>\r\n      )}\r\n    </Formik>\r\n  );\r\n});\r\n","import React, { useState } from \"react\";\r\n\r\nimport { Button, Grid, Header, Tab } from \"semantic-ui-react\";\r\n\r\nimport { observer } from \"mobx-react-lite\";\r\nimport ProfileEditForm from \"./ProfileEdit.Form\";\r\nimport { useStore } from \"../../App/stores/store\";\r\nexport default observer(function ProfileAbout() {\r\n  const { profileStore } = useStore();\r\n  const { isCurrentUser, profile } = profileStore;\r\n  const [editMode, setEditMode] = useState(false);\r\n  return (\r\n    <Tab.Pane>\r\n      <Grid>\r\n        <Grid.Column width=\"16\">\r\n          <Header\r\n            floated=\"left\"\r\n            icon=\"user\"\r\n            content={`About ${profile?.displayName}`}\r\n          />\r\n          {isCurrentUser && (\r\n            <Button\r\n              floated=\"right\"\r\n              basic\r\n              content={editMode ? \"Cancel\" : \"Edit Profile\"}\r\n              onClick={() => setEditMode(!editMode)}\r\n            />\r\n          )}\r\n        </Grid.Column>\r\n        <Grid.Column width=\"16\">\r\n          {editMode ? (\r\n            <ProfileEditForm setEditMode={setEditMode} />\r\n          ) : (\r\n            <span style={{ whiteSpace: \"pre-wrap\" }}>{profile?.bio}</span>\r\n          )}\r\n        </Grid.Column>\r\n      </Grid>\r\n    </Tab.Pane>\r\n  );\r\n});\r\n","import React, { SyntheticEvent, useEffect } from \"react\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport { Tab, Grid, Header, Card, Image, TabProps } from \"semantic-ui-react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport { format } from \"date-fns\";\r\n\r\nimport { UserActivity } from \"../../App/Models/UserActivity\";\r\nimport { useStore } from \"../../App/stores/store\";\r\nconst panes = [\r\n  { menuItem: \"Future Events\", pane: { key: \"future\" } },\r\n  { menuItem: \"Past Events\", pane: { key: \"past\" } },\r\n  { menuItem: \"Hosting\", pane: { key: \"hosting\" } },\r\n];\r\nexport default observer(function ProfileActivities() {\r\n  const { profileStore } = useStore();\r\n  const { loadUserActivities, profile, loadingActivities, userActivities } =\r\n    profileStore;\r\n  useEffect(() => {\r\n    loadUserActivities(profile!.username);\r\n  }, [loadUserActivities, profile]);\r\n  const handleTabChange = (e: SyntheticEvent, data: TabProps) => {\r\n    loadUserActivities(\r\n      profile!.username,\r\n      panes[data.activeIndex as number].pane.key\r\n    );\r\n  };\r\n  return (\r\n    <Tab.Pane loading={loadingActivities}>\r\n      <Grid>\r\n        <Grid.Column width={16}>\r\n          <Header floated=\"left\" icon=\"calendar\" content={\"Activities\"} />\r\n        </Grid.Column>\r\n        <Grid.Column width={16}>\r\n          <Tab\r\n            panes={panes}\r\n            menu={{ secondary: true, pointing: true }}\r\n            onTabChange={(e, data) => handleTabChange(e, data)}\r\n          />\r\n          <br />\r\n          <Card.Group itemsPerRow={4}>\r\n            {userActivities.map((activity: UserActivity) => (\r\n              <Card\r\n                as={Link}\r\n                to={`/activities/${activity.id}`}\r\n                key={activity.id}\r\n              >\r\n                <Image\r\n                  src={`/assets/categoryImages/${activity.category}.jpg`}\r\n                  style={{ minHeight: 100, objectFit: \"cover\" }}\r\n                />\r\n                <Card.Content>\r\n                  <Card.Header textAlign=\"center\">{activity.title}</Card.Header>\r\n                  <Card.Meta textAlign=\"center\">\r\n                    <div>{format(new Date(activity.date), \"do LLL\")}</div>\r\n                    <div>{format(new Date(activity.date), \"h:mm a\")}</div>\r\n                  </Card.Meta>\r\n                </Card.Content>\r\n              </Card>\r\n            ))}\r\n          </Card.Group>\r\n        </Grid.Column>\r\n      </Grid>\r\n    </Tab.Pane>\r\n  );\r\n});\r\n","import { observer } from \"mobx-react-lite\";\r\nimport React, { useEffect } from \"react\";\r\nimport { Card, Grid, Header, Tab } from \"semantic-ui-react\";\r\nimport { useStore } from \"../../App/stores/store\";\r\nimport ProfileCard from \"./ProfileCard\";\r\n\r\nexport default observer(function ProfileFollowings() {\r\n  const { profileStore } = useStore();\r\n  const { profile, followings, loadingFollowings, activeTab } = profileStore;\r\n\r\n  return (\r\n    <Tab.Pane loading={loadingFollowings}>\r\n      <Grid>\r\n        <Grid.Column width={16}>\r\n          <Header\r\n            floated=\"left\"\r\n            icon=\"user\"\r\n            content={\r\n              activeTab === 3\r\n                ? `People following ${profile?.displayName}`\r\n                : `People ${profile?.displayName} is following`\r\n            }\r\n          />\r\n        </Grid.Column>\r\n        <Grid.Column width={16}>\r\n          <Card.Group itemsPerRow={4}>\r\n            {followings.map((profile) => (\r\n              <ProfileCard key={profile.username} profile={profile} />\r\n            ))}\r\n          </Card.Group>\r\n        </Grid.Column>\r\n      </Grid>\r\n    </Tab.Pane>\r\n  );\r\n});\r\n","import React from \"react\";\r\nimport { Cropper } from \"react-cropper\";\r\nimport \"cropperjs/dist/cropper.css\";\r\n\r\ninterface Props {\r\n  imagePreview: string;\r\n  setCropper: (cropper: Cropper) => void;\r\n}\r\nexport default function PhotoWidgetCropper({\r\n  imagePreview,\r\n  setCropper,\r\n}: Props) {\r\n  return (\r\n    <Cropper\r\n      src={imagePreview}\r\n      style={{ height: 200, width: \"100%\" }}\r\n      initialAspectRatio={1}\r\n      aspectRatio={1}\r\n      preview=\".img-preview\"\r\n      guides={false}\r\n      viewMode={1}\r\n      autoCropArea={1}\r\n      background={false}\r\n      onInitialized={(cropper) => setCropper(cropper)}\r\n    />\r\n  );\r\n}\r\n","import { borderColor } from \"@mui/system\";\r\nimport React, { useCallback } from \"react\";\r\nimport { useDropzone } from \"react-dropzone\";\r\nimport { Header, Icon } from \"semantic-ui-react\";\r\n\r\ninterface Props {\r\n  setFiles: (files: any) => void;\r\n}\r\nexport default function PhotoWidgetDropzone({ setFiles }: Props) {\r\n  const dzStyles = {\r\n    border: \"dashed 3px #eee\",\r\n    borderColor: \"#eee\",\r\n    boderRadius: \"5px\",\r\n    paddingTop: \"30px\",\r\n    textAlign: \"center\" as \"center\",\r\n    height: 200,\r\n  };\r\n\r\n  const dzActive = {\r\n    borderColor: \"green\",\r\n  };\r\n  const onDrop = useCallback(\r\n    (acceptedFiles) => {\r\n      setFiles(\r\n        acceptedFiles.map((file: any) =>\r\n          Object.assign(file, {\r\n            preview: URL.createObjectURL(file),\r\n          })\r\n        )\r\n      );\r\n    },\r\n    [setFiles]\r\n  );\r\n  const { getRootProps, getInputProps, isDragActive } = useDropzone({ onDrop });\r\n\r\n  return (\r\n    <div\r\n      {...getRootProps()}\r\n      style={isDragActive ? { ...dzStyles, ...dzActive } : dzStyles}\r\n    >\r\n      <input {...getInputProps()} />\r\n      <Icon name=\"upload\" size=\"huge\" />\r\n      <Header content=\"Drop Image here\" />\r\n    </div>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\n//import { Cropper } from \"react-cropper\";\r\nimport { Button, Grid, Header, Image } from \"semantic-ui-react\";\r\nimport PhotoWidgetCropper from \"./PhotoWidgetCropper\";\r\nimport PhotoWidgetDropzone from \"./PhotoWidgetDropzone\";\r\n\r\ninterface Props {\r\n  loading: boolean;\r\n  uploadPhoto: (file: Blob) => void;\r\n}\r\nexport default function PhotoUploadWidget({ loading, uploadPhoto }: Props) {\r\n  const [files, setFiles] = useState<any>([]);\r\n  const [cropper, setCropper] = useState<Cropper>();\r\n\r\n  function onCrop() {\r\n    if (cropper) {\r\n      cropper.getCroppedCanvas().toBlob((blob) => uploadPhoto(blob!));\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      files.forEach((file: any) => URL.revokeObjectURL(file.preview));\r\n    };\r\n  }, [files]);\r\n  return (\r\n    <Grid>\r\n      <Grid.Column width={4}>\r\n        <Header color=\"teal\" content=\"Step-1 Add photo\" />\r\n        <PhotoWidgetDropzone setFiles={setFiles} />\r\n      </Grid.Column>\r\n      <Grid.Column width={1} />\r\n      <Grid.Column width={4}>\r\n        <Header sub color=\"teal\" content=\"Step-2 Resize image\" />\r\n        {files && files.length > 0 && (\r\n          <PhotoWidgetCropper\r\n            setCropper={setCropper}\r\n            imagePreview={files[0].preview}\r\n          />\r\n        )}\r\n      </Grid.Column>\r\n      <Grid.Column width={1} />\r\n      <Grid.Column width={4}>\r\n        <Header color=\"teal\" content=\"Step-3 Preview & Upload\" />\r\n        {files && files.length > 0 && (\r\n          <>\r\n            <div\r\n              className=\"img-preview\"\r\n              style={{ minHeight: 200, overflow: \"hidden\" }}\r\n            />\r\n\r\n            <Button.Group widths={2}>\r\n              <Button\r\n                loading={loading}\r\n                onClick={onCrop}\r\n                positive\r\n                icon=\"check\"\r\n              />\r\n              <Button\r\n                onClick={() => setFiles([])}\r\n                icon=\"close\"\r\n                disabled={loading}\r\n              />\r\n            </Button.Group>\r\n          </>\r\n        )}\r\n      </Grid.Column>\r\n    </Grid>\r\n  );\r\n}\r\n","import { observer } from \"mobx-react-lite\";\r\nimport React, { SyntheticEvent, useState } from \"react\";\r\nimport {\r\n  Button,\r\n  ButtonGroup,\r\n  Card,\r\n  Grid,\r\n  Header,\r\n  Image,\r\n  Tab,\r\n} from \"semantic-ui-react\";\r\nimport PhotoUploadWidget from \"../../App/common/imageUpload/PhotoUploadWidget\";\r\nimport { Photo, Profile } from \"../../App/Models/profile\";\r\nimport { useStore } from \"../../App/stores/store\";\r\n\r\ninterface Props {\r\n  profile: Profile;\r\n}\r\nexport default observer(function ProfilePhotos({ profile }: Props) {\r\n  const {\r\n    profileStore: {\r\n      isCurrentUser,\r\n      uploadPhoto,\r\n      uploading,\r\n      loading,\r\n      setMainPhoto,\r\n      deletePhoto,\r\n    },\r\n  } = useStore();\r\n  const [addPhotoMode, setAddPhotoMode] = useState(false);\r\n  const [target, setTarget] = useState(\"\");\r\n\r\n  function handlePhotoUpload(file: Blob) {\r\n    uploadPhoto(file).then(() => setAddPhotoMode(false));\r\n  }\r\n\r\n  function handleSetMainPhoto(\r\n    photo: Photo,\r\n    e: SyntheticEvent<HTMLButtonElement>\r\n  ) {\r\n    setTarget(e.currentTarget.name);\r\n    setMainPhoto(photo);\r\n  }\r\n\r\n  function handleDeletePhoto(\r\n    photo: Photo,\r\n    e: SyntheticEvent<HTMLButtonElement>\r\n  ) {\r\n    setTarget(e.currentTarget.name);\r\n    deletePhoto(photo);\r\n  }\r\n  return (\r\n    <Tab.Pane>\r\n      <Grid>\r\n        <Grid.Column width={16}>\r\n          <Header floated=\"left\" icon=\"image\" content=\"Photos\" />\r\n          {isCurrentUser && (\r\n            <Button\r\n              floated=\"right\"\r\n              basic\r\n              content={addPhotoMode ? \"Cancel\" : \"Add Photo\"}\r\n              onClick={() => setAddPhotoMode(!addPhotoMode)}\r\n            />\r\n          )}\r\n        </Grid.Column>\r\n        <Grid.Column width={16}>\r\n          {addPhotoMode ? (\r\n            <PhotoUploadWidget\r\n              uploadPhoto={handlePhotoUpload}\r\n              loading={uploading}\r\n            />\r\n          ) : (\r\n            <Card.Group itemsPerRow={5}>\r\n              {profile.photos?.map((photo) => (\r\n                <Card key={photo.id}>\r\n                  <Image src={photo.url} />\r\n                  {isCurrentUser && (\r\n                    <ButtonGroup fluid widths={2}>\r\n                      <Button\r\n                        basic\r\n                        color=\"green\"\r\n                        content=\"Main\"\r\n                        name={\"main\" + photo.id}\r\n                        disabled={photo.isMain}\r\n                        loading={target === \"main\" + photo.id && loading}\r\n                        onClick={(e) => handleSetMainPhoto(photo, e)}\r\n                      />\r\n\r\n                      <Button\r\n                        basic\r\n                        color=\"red\"\r\n                        icon=\"trash\"\r\n                        loading={target === photo.id && loading}\r\n                        onClick={(e) => handleDeletePhoto(photo, e)}\r\n                        disabled={photo.isMain}\r\n                        name={photo.id}\r\n                      />\r\n                    </ButtonGroup>\r\n                  )}\r\n                </Card>\r\n              ))}\r\n            </Card.Group>\r\n          )}\r\n        </Grid.Column>\r\n      </Grid>\r\n    </Tab.Pane>\r\n  );\r\n});\r\n","import { observer } from \"mobx-react-lite\";\r\nimport React from \"react\";\r\nimport { Tab } from \"semantic-ui-react\";\r\nimport { Profile } from \"../../App/Models/profile\";\r\nimport { useStore } from \"../../App/stores/store\";\r\nimport ProfileAbout from \"./ProfileAbout\";\r\nimport ProfileActivities from \"./ProfileActivities\";\r\nimport ProfileFollowings from \"./ProfileFollowings\";\r\nimport ProfilePhotos from \"./ProfilePhotos\";\r\n\r\ninterface Props {\r\n  profile: Profile;\r\n}\r\nexport default observer(function ProfileContent({ profile }: Props) {\r\n  const { profileStore } = useStore();\r\n  const panes = [\r\n    {\r\n      menuItem: \"About\",\r\n      render: () => (\r\n        <Tab.Pane>\r\n          {\" \"}\r\n          <ProfileAbout />\r\n        </Tab.Pane>\r\n      ),\r\n    },\r\n    {\r\n      menuItem: \"Photos\",\r\n      render: () => (\r\n        <Tab.Pane>\r\n          <ProfilePhotos profile={profile} />\r\n        </Tab.Pane>\r\n      ),\r\n    },\r\n    {\r\n      menuItem: \"Events\",\r\n      render: () => (\r\n        <Tab.Pane>\r\n          {\" \"}\r\n          <ProfileActivities />\r\n        </Tab.Pane>\r\n      ),\r\n    },\r\n    {\r\n      menuItem: \"Followers\",\r\n      render: () => (\r\n        <Tab.Pane>\r\n          {\" \"}\r\n          <ProfileFollowings />\r\n        </Tab.Pane>\r\n      ),\r\n    },\r\n    {\r\n      menuItem: \"Following\",\r\n      render: () => (\r\n        <Tab.Pane>\r\n          {\" \"}\r\n          <ProfileFollowings />\r\n        </Tab.Pane>\r\n      ),\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <Tab\r\n      menu={{ fluid: true, vertical: true }}\r\n      menuPosition=\"right\"\r\n      panes={panes}\r\n      onTabChange={(e, data) => profileStore.setActiveTab(data.activeIndex)}\r\n    />\r\n  );\r\n});\r\n","import { observer } from \"mobx-react-lite\";\r\nimport React from \"react\";\r\nimport {\r\n  Button,\r\n  Divider,\r\n  Grid,\r\n  Header,\r\n  Item,\r\n  Reveal,\r\n  Segment,\r\n  Statistic,\r\n} from \"semantic-ui-react\";\r\nimport { Profile } from \"../../App/Models/profile\";\r\nimport FollowButton from \"./FollowButton\";\r\ninterface Props {\r\n  profile: Profile;\r\n}\r\nexport default observer(function ProfileHeader({ profile }: Props) {\r\n  return (\r\n    <Segment>\r\n      <Grid>\r\n        <Grid.Column width={12}>\r\n          <Item.Group>\r\n            <Item>\r\n              <Item.Image\r\n                avatar\r\n                size=\"small\"\r\n                src={profile.image || \"/assets/user.png\"}\r\n              />\r\n              <Item.Content verticalAlign=\"middle\">\r\n                <Header as=\"h1\" content={profile.displayName} />\r\n              </Item.Content>\r\n            </Item>\r\n          </Item.Group>\r\n        </Grid.Column>\r\n        <Grid.Column width={4}>\r\n          <Statistic.Group widths={2}>\r\n            <Statistic label=\"Followers\" value={profile.followersCount} />\r\n            <Statistic label=\"Following\" value={profile.followingCount} />\r\n          </Statistic.Group>\r\n          <Divider />\r\n          <FollowButton profile={profile} />\r\n        </Grid.Column>\r\n      </Grid>\r\n    </Segment>\r\n  );\r\n});\r\n","import { observer } from \"mobx-react-lite\";\r\nimport React, { useEffect } from \"react\";\r\nimport { useParams } from \"react-router\";\r\nimport { Grid } from \"semantic-ui-react\";\r\nimport LoadingComponents from \"../../App/Layout/LoadingComponents\";\r\nimport { useStore } from \"../../App/stores/store\";\r\nimport ProfileContent from \"./ProfileContent\";\r\nimport ProfileHeader from \"./ProfileHeader\";\r\n\r\nexport default observer(function ProfilePage() {\r\n  const { username } = useParams<{ username: string }>();\r\n  const { profileStore } = useStore();\r\n  const { loadingProfile, loadProfile, profile, setActiveTab } = profileStore;\r\n\r\n  useEffect(() => {\r\n    loadProfile(username);\r\n\r\n    return () => {\r\n      setActiveTab(0);\r\n    };\r\n  }, [loadProfile, username]);\r\n\r\n  if (loadingProfile) {\r\n    return <LoadingComponents content=\"Loading profile...\" />;\r\n  }\r\n  return (\r\n    <Grid>\r\n      <Grid.Column width={16}>\r\n        {profile && (\r\n          <>\r\n            <ProfileHeader profile={profile} />\r\n            <ProfileContent profile={profile} />\r\n          </>\r\n        )}\r\n      </Grid.Column>\r\n    </Grid>\r\n  );\r\n});\r\n","import React from \"react\";\r\nimport { Redirect, Route, RouteComponentProps, RouteProps } from \"react-router\";\r\nimport { useStore } from \"../stores/store\";\r\n\r\ninterface Props extends RouteProps {\r\n  component:\r\n    | React.ComponentType<RouteComponentProps<any>>\r\n    | React.ComponentType<any>;\r\n}\r\nexport default function PrivateRoute({ component: Component, ...rest }: Props) {\r\n  const {\r\n    userStore: { isLoggedIn },\r\n  } = useStore();\r\n\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={(props) =>\r\n        isLoggedIn ? <Component {...props} /> : <Redirect to=\"/\" />\r\n      }\r\n    />\r\n  );\r\n}\r\n","import React, { useEffect, useState } from \"react\";\nimport { Activity } from \"../Models/activity\";\nimport \"../Layout/styles.css\";\nimport NavBar from \"./NavBar\";\nimport ActivityDashboard from \"../../Features/activities/dashboard/ActivityDashboard\";\nimport { Button, Container, List, Menu } from \"semantic-ui-react\";\nimport { v4 as uuid } from \"uuid\";\nimport agent from \"../api/Agent\";\nimport LoadingComponents from \"./LoadingComponents\";\nimport { observer } from \"mobx-react-lite\";\nimport HomePage from \"../../Features/home/HomePage\";\nimport { Route, Switch, useLocation } from \"react-router-dom\";\nimport ActivityForm from \"../../Features/activities/form/ActivityForm\";\nimport ActivityDetails from \"../../Features/activities/details/ActivityDetails\";\nimport TestErrors from \"../../Features/errors/TestError\";\nimport { ToastContainer } from \"react-toastify\";\nimport NotFound from \"../../Features/errors/NotFound\";\nimport ServerError from \"../../Features/errors/ServerError\";\nimport LoginForm from \"../../Features/users/LoginForm\";\nimport { useStore } from \"../stores/store\";\nimport ModalContainer from \"../common/modals/ModalContainer\";\nimport ProfilePage from \"../../Features/profiles/ProfilePage\";\nimport PrivateRoute from \"./PrivateRoute\";\n\nfunction App() {\n  const location = useLocation();\n  const { commonStore, userStore } = useStore();\n\n  useEffect(() => {\n    if (commonStore.token) {\n      userStore.getUser().finally(() => commonStore.setAppLoaded());\n    } else {\n      commonStore.setAppLoaded();\n    }\n  }, [commonStore, useStore]);\n\n  if (!commonStore.appLoaded) {\n    return <LoadingComponents content=\"Loading app...\" />;\n  }\n  return (\n    <>\n      <ToastContainer position=\"bottom-right\" hideProgressBar />\n      <ModalContainer />\n      <Route exact path=\"/\" component={HomePage} />\n      <Route\n        path={\"/(.+)\"}\n        render={() => (\n          <>\n            <NavBar />\n            <Container style={{ marginTop: \" 7em\" }}>\n              <Switch>\n                <PrivateRoute\n                  exact\n                  path=\"/activities\"\n                  component={ActivityDashboard}\n                />\n                <PrivateRoute\n                  path=\"/activities/:id\"\n                  component={ActivityDetails}\n                />\n                <PrivateRoute\n                  key={location.key}\n                  path={[\"/createActivity\", \"/manage/:id\"]}\n                  component={ActivityForm}\n                />\n                <PrivateRoute\n                  path=\"/profiles/:username\"\n                  component={ProfilePage}\n                />\n                <PrivateRoute path=\"/errors\" component={TestErrors} />\n                <Route path=\"/server-error\" component={ServerError} />\n\n                <Route component={NotFound} />\n              </Switch>\n            </Container>\n          </>\n        )}\n      />\n    </>\n  );\n}\n\nexport default observer(App);\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { useEffect } from \"react\";\r\nimport { useLocation } from \"react-router-dom\";\r\n\r\nexport default function ScrollToTop() {\r\n  const { pathname } = useLocation();\r\n\r\n  useEffect(() => {\r\n    window.scrollTo(0, 0);\r\n  }, [pathname]);\r\n\r\n  return null;\r\n}\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"semantic-ui-css/semantic.min.css\";\nimport \"react-calendar/dist/Calendar.css\";\nimport \"react-toastify/dist/ReactToastify.min.css\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport \"./App/Layout/styles.css\";\nimport App from \"./App/Layout/App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { store, StoreContext } from \"./App/stores/store\";\nimport { BrowserRouter, Router } from \"react-router-dom\";\nimport { createBrowserHistory } from \"history\";\nimport ScrollToTop from \"./App/Layout/ScrollToTop\";\n\nexport const history = createBrowserHistory();\n\nReactDOM.render(\n  <React.StrictMode>\n    <StoreContext.Provider value={store}>\n      <Router history={history}>\n        <ScrollToTop />\n        <App />\n      </Router>\n    </StoreContext.Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}